resource_types:
- name: metalink-repository
  source:
    repository: dpb587/metalink-repository-resource
  type: docker-image

resources:
- name: cf
  type: cf
  source:
    api: https://api.run.pivotal.io
    organization: garden-windows
    space: topic-bots
    username: ((cf-username))
    password: ((cf-password))
- name: config
  type: git
  source:
    uri: https://github.com/greenhouse-org/delegate-bot-config.git
    branch: garden-windows
- name: tracker-bot-repo
  type: git
  source:
    uri: git@github.com:pivotal-cf-experimental/relint-trackerbot.git
    private_key: {{GREENHOUSE-CI_SSH_KEY}}
- name: ci
  type: git
  source:
    uri: https://github.com/cloudfoundry/garden-windows-ci
- name: slack-delegate-bot
  type: metalink-repository
  source:
    include_files:
    - delegatebot-*-linux-amd64
    uri: git+https://github.com/dpb587/slack-delegate-bot.git//published#artifacts

jobs:
- name: deploy-tracker-bot
  serial: true
  plan:
  - in_parallel:
    - get: tracker-bot-repo
    - get: ci
  - task: write-config-file
    file: ci/tasks/deploy-tracker-bot/task.yml
    params:
      TRACKER_API_TOKEN: ((tracker-api-token))
      TRACKER_PROJECT_ID: 2409722
  - put: cf
    inputs:
    - tracker-bot-repo
    params:
      manifest: tracker-bot-repo/manifest.yml
      path: tracker-bot-repo


- name: deploy-slack-delegate-bot
  serial: true
  plan:
  - in_parallel:
    - get: slack-delegate-bot
      trigger: true
    - get: config
      trigger: true
  - task: build
    config:
      container_limits: {}
      image_resource:
        source:
          repository: alpine
        type: docker-image
      inputs:
      - name: slack-delegate-bot
      - name: config
      outputs:
      - name: app
      platform: linux
      run:
        args:
        - -c
        - |
          set -eu

          # required when running the bot for user timezone configuration
          apk add --no-cache tzdata

          # avoids google default credentials error during validation
          export PAIRIST_API_KEY=fake-token

          cp slack-delegate-bot/* app/exec
          echo 'exec ./exec --config=config/*.yml --config=config/default.delegatebot ${COMMAND:-run}' > app/run.sh
          chmod +x app/*

          cat > app/cf.yml <<EOF
          applications:
          - name: garden-windows-slack-delegate-bot
            memory: 32M
            instances: 1
            buildpack: binary_buildpack
            env:
              SLACK_TOKEN: ((slack-token))
            no-route: true
            command: ./run.sh
          EOF

          cp -rp config/config app/config

          cd app

          COMMAND=validate ./run.sh
        path: sh
  - put: cf
    params:
      manifest: app/cf.yml
      path: app
