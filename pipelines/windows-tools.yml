groups:
- name: main
  jobs:
  - bump-go
  - create-release

resources:
- name: ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/garden-windows-ci.git

- name: windows-tools-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/windows-tools-release.git
    branch: master
    private_key: {{GREENHOUSE-CI_SSH_KEY}}

- name: windows-tools-release-github
  type: github-release
  source:
    user: cloudfoundry
    repository: windows-tools-release
    drafts: true
    access_token: {{GREENHOUSE_CI_ACCESS_TOKEN}}

- name: golang-release
  type: git
  source:
    uri: https://github.com/bosh-packages/golang-release.git
    tag_filter: v*

jobs:
- name: bump-go
  serial: true
  plan:
  - in_parallel:
    - get: golang-release
      trigger: true
    - get: windows-tools-release
    - get: ci
  - task: bosh-vendor-package
    file: ci/tasks/bosh-vendor-package/task.yml
    params:
      AWS_ACCESS_KEY_ID: {{BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: {{BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY}}
      PACKAGE: golang-1-windows
    input_mapping:
      release-repo: windows-tools-release
      package-repo: golang-release
  - put: windows-tools-release
    params:
      repository: bumped-release-repo

- name: create-release
  serial: true
  plan:
  - get: windows-tools-release
  - task: create-release
    config:
      platform: linux
      image_resource: {type: docker-image, source: {repository: cloudfoundry/garden-windows-ci}}
      inputs:
      - name: windows-tools-release
      outputs:
      - name: github-release-info
      params:
        AWS_ACCESS_KEY_ID: {{BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID}}
        AWS_SECRET_ACCESS_KEY: {{BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY}}
      run:
        path: sh
        args:
        - -exc
        - |
          version="$(curl --silent https://api.github.com/repos/cloudfoundry/windows-tools-release/releases/latest | jq -r .tag_name | cut -d"v" -f2)"
          bumpedVersion=$((version+1))
          echo "v$bumpedVersion" > github-release-info/version
          echo "Windows tools v$bumpedVersion" > github-release-info/name
          cd windows-tools-release
          PRIVATE_YML='---
          blobstore:
            provider: s3
            options:
              credentials_source: env_or_profile'
          echo "$PRIVATE_YML" > config/private.yml
          bosh create-release --final
          git config user.email "pivotal-netgarden-eng@pivotal.io"
          git config user.name "CI (Automated)"
          git add releases/
          git commit -m "Create release $bumpedVersion"
          cd -
  - put: windows-tools-release-github
    params:
      name: github-release-info/name
      tag: github-release-info/version
