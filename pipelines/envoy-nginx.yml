resource_types:
- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

resources:

# Git

- name: ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/garden-windows-ci.git

- name: envoy-nginx-release-develop
  type: git
  source:
    branch: develop
    uri: git@github.com:cloudfoundry-incubator/envoy-nginx-release.git
    private_key: ((GREENHOUSE-CI_SSH_KEY))
    git_config:
    - name: user.email
      value: "pivotal-netgarden-eng@pivotal.io"
    - name: user.name
      value: "Greenhouse CI"
    ignore_paths:
    - releases/**
    - .final_builds/**

- name: envoy-nginx-release-master
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry-incubator/envoy-nginx-release.git
    private_key: ((GREENHOUSE-CI_SSH_KEY))
    git_config:
    - name: user.email
      value: "pivotal-netgarden-eng@pivotal.io"
    - name: user.name
      value: "Greenhouse CI"

- name: version
  type: semver
  source:
    access_key_id: ((BOSH_WINDOWS_S3_ADMIN_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_S3_ADMIN_SECRET_ACCESS_KEY))
    bucket: envoy-nginx-release
    initial_version: 0.1.0
    key: version
    region_name: us-east-1

- name: envoy-nginx-release-github-release
  type: github-release
  source:
    user: cloudfoundry-incubator
    repository: envoy-nginx-release
    drafts: true
    access_token: ((GREENHOUSE_CI_ACCESS_TOKEN))

- name: cf-acceptance-tests
  type: git
  source:
    branch: main
    uri: https://github.com/cloudfoundry/cf-acceptance-tests

- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: main
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git

- name: cf-deployment
  type: git
  source:
    branch: release-candidate
    uri: https://github.com/cloudfoundry/cf-deployment.git

- name: garden-windows-environments
  type: git
  source:
    branch: master
    private_key: ((GREENHOUSE-CI_SSH_KEY))
    uri: git@github.com:pivotal/garden-windows-environments


# S3

- name: gcp-windows-stemcell
  type: s3
  source:
    bucket: all-bosh-windows
    regexp: 2019/tested/gcp/light-bosh-stemcell-(.*)-google-kvm-windows2019-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))

# BOSH Deployment

- name: alfredo-cf-deployment
  type: bosh-deployment
  source:
    deployment: cf
    client: ((ALFREDO_BOSH_CLIENT))
    client_secret: ((ALFREDO_BOSH_CLIENT_SECRET))
    ca_cert: ((ALFREDO_BOSH_CA_CERT))
    target: ((ALFREDO_BOSH_ENVIRONMENT))
    jumpbox_url: ((ALFREDO_JUMPBOX_IP)):22
    jumpbox_ssh_key: ((ALFREDO_JUMPBOX_SSH_KEY))
    skip_check: true

jobs:
- name: test-envoy-nginx
  plan:
  - in_parallel:
    - get: ci
    - get: envoy-nginx-release-develop
      trigger: true
  - task: run-ginkgo-exe
    tags: ["2019"]
    file: ci/tasks/ginkgo-test-windows/task.yml
    input_mapping:
      repo: envoy-nginx-release-develop
    params:
      EPHEMERAL_DISK_TEMP_PATH: "C:\\var\\vcap\\data\\tmp"
      TEST_PATH: "repo/src/code.cloudfoundry.org/envoy-nginx"

- name: alfredo-cats
  serial: true
  plan:
  - do:
    - in_parallel:
      - get: cf-deployment
      - get: envoy-nginx-release-develop
        passed: [test-envoy-nginx]
        trigger: true
      - get: gcp-windows-stemcell
      - get: cf-acceptance-tests
      - get: cf-deployment-concourse-tasks
      - get: ci
      - get: garden-windows-environments
    - task: create-release
      file: ci/tasks/bosh-cr/task.yml
      input_mapping: { release: envoy-nginx-release-develop }
    - task: get-linux-stemcell
      file: ci/tasks/get-gcp-linux-stemcell/task.yml
      output_mapping: { stemcell: gcp-linux-stemcell }
    - task: delete-deployment
      file: ci/tasks/bosh-deld/task.yml
      params:
        BOSH_DEPLOYMENT: cf
        BOSH_ENVIRONMENT: {{ALFREDO_BOSH_ENVIRONMENT}}
        BOSH_CLIENT: {{ALFREDO_BOSH_CLIENT}}
        BOSH_CLIENT_SECRET: {{ALFREDO_BOSH_CLIENT_SECRET}}
        BOSH_CA_CERT: {{ALFREDO_BOSH_CA_CERT}}
        JUMPBOX_IP: {{ALFREDO_JUMPBOX_IP}}
        JUMPBOX_SSH_KEY: {{ALFREDO_JUMPBOX_SSH_KEY}}
    - task: delete-stemcells
      file: ci/tasks/bosh-delete-stemcells/task.yml
      params:
        BOSH_CLIENT: {{ALFREDO_BOSH_CLIENT}}
        BOSH_CLIENT_SECRET: {{ALFREDO_BOSH_CLIENT_SECRET}}
        BOSH_ENVIRONMENT: {{ALFREDO_BOSH_ENVIRONMENT}}
        BOSH_CA_CERT: {{ALFREDO_BOSH_CA_CERT}}
        JUMPBOX_IP: {{ALFREDO_JUMPBOX_IP}}
        JUMPBOX_SSH_KEY: {{ALFREDO_JUMPBOX_SSH_KEY}}
    - put: alfredo-cf-deployment
      params:
        manifest: cf-deployment/cf-deployment.yml
        stemcells:
        - gcp-linux-stemcell/*.tgz
        - gcp-windows-stemcell/*.tgz
        releases:
        - release-tarball/*.tgz
        ops_files:
        - cf-deployment/operations/scale-to-one-az.yml
        - cf-deployment/operations/windows2019-cell.yml
        - cf-deployment/operations/use-online-windows2019fs.yml
        - cf-deployment/operations/use-latest-windows2019-stemcell.yml
        - ci/operations/scale-down-windows2019.yml
        - ci/operations/enable-nginx-routing-integrity-windows2019.yml
        - ci/operations/decrease-rep-evacuation-timeout.yml
        - ci/operations/use-2-azs-for-router.yml
        vars_files:
        - garden-windows-environments/alfredo/cf/vars.yml
        cleanup: true
      get_params:
        skip_export: true
    - task: clean-up
      file: ci/tasks/bosh-cleanup/task.yml
      params:
        BOSH_CLIENT: {{ALFREDO_BOSH_CLIENT}}
        BOSH_CLIENT_SECRET: {{ALFREDO_BOSH_CLIENT_SECRET}}
        BOSH_ENVIRONMENT: {{ALFREDO_BOSH_ENVIRONMENT}}
        BOSH_CA_CERT: {{ALFREDO_BOSH_CA_CERT}}
        JUMPBOX_IP: {{ALFREDO_JUMPBOX_IP}}
        JUMPBOX_SSH_KEY: {{ALFREDO_JUMPBOX_SSH_KEY}}
    - task: generate-integration-config
      file: ci/tasks/generate-integration-config/task.yml
      params:
        ADMIN_PASSWORD: {{ALFREDO_ADMIN_PASSWORD}}
        ADMIN_USER: admin
        API: api.alfredo.cf-app.com
        APPS_DOMAIN: alfredo.cf-app.com
        UNALLOCATED_IP: 10.0.0.5
        WINDOWS_STACK: windows
    - task: cats
      file: cf-deployment-concourse-tasks/run-cats/task.yml
      params:
        NODES: 4
      on_success:
        task: delete-deployment
        file: ci/tasks/bosh-deld/task.yml
        params:
          BOSH_DEPLOYMENT: cf
          BOSH_ENVIRONMENT: {{ALFREDO_BOSH_ENVIRONMENT}}
          BOSH_CLIENT: {{ALFREDO_BOSH_CLIENT}}
          BOSH_CLIENT_SECRET: {{ALFREDO_BOSH_CLIENT_SECRET}}
          BOSH_CA_CERT: {{ALFREDO_BOSH_CA_CERT}}
          JUMPBOX_IP: {{ALFREDO_JUMPBOX_IP}}
          JUMPBOX_SSH_KEY: {{ALFREDO_JUMPBOX_SSH_KEY}}

- name: shipit-minor
  serial: true
  plan:
  - in_parallel:
    - get: ci
    - get: envoy-nginx-release-develop
      passed: [alfredo-cats]
    - get: envoy-nginx-release-master
    - get: version
      params: {bump: minor}
  - task: finalize-release
    file: ci/tasks/finalize-release/task.yml
    input_mapping: { release: envoy-nginx-release-develop }
    params:
      RELEASE_NAME: envoy-nginx
      AWS_ACCESS_KEY_ID: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
      AWS_SECRET_ACCESS_KEY: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
  - put: envoy-nginx-release-master
    params:
      repository: finalized-release/release
      tag: version/number
      tag_prefix: v
  - put: envoy-nginx-release-develop
    params:
      repository: finalized-release/release
      merge: true
  - put: version
    params: {file: version/number}
  - task: generate-github-release
    input_mapping: { release: finalized-repo }
    file: ci/tasks/generate-github-release/task.yml
  - put: envoy-nginx-release-github-release
    params:
      commitish: generated-release/commitish
      name: generated-release/name
      tag: generated-release/version
      globs:
      - finalized-release/envoy-nginx-*.tgz
