resource_types:
- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

resources:
- name: ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/garden-windows-ci.git
- name: groot-windows-develop
  type: git
  source:
    branch: develop
    uri: git@github.com:cloudfoundry/groot-windows.git
    private_key: {{CLOUDFOUNDRYINCUBATOR_GROOT_WINDOWS_DEPLOY_KEY}}
- name: groot-windows-master
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/groot-windows.git
    private_key: {{CLOUDFOUNDRYINCUBATOR_GROOT_WINDOWS_DEPLOY_KEY}}
- name: groot
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/groot.git
- name: winc-develop
  type: git
  source:
    branch: develop
    uri: https://github.com/cloudfoundry/winc.git
- name: winc-master
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/winc.git
    private_key: {{CLOUDFOUNDRYINCUBATOR_WINC_DEPLOY_KEY}}
- name: cf-acceptance-tests
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-acceptance-tests
- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks
- name: cf-deployment
  type: git
  source:
    branch: release-candidate
    uri: https://github.com/cloudfoundry/cf-deployment.git
- name: winc-release-develop
  type: git
  source:
    branch: develop
    uri: git@github.com:cloudfoundry/winc-release.git
    private_key: {{CLOUDFOUNDRYINCUBATOR_WINC-RELEASE_DEPLOY_KEY}}
- name: winc-release-master
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/winc-release.git
    private_key: {{CLOUDFOUNDRYINCUBATOR_WINC-RELEASE_DEPLOY_KEY}}
- name: garden-runc-release
  type: git
  source:
    branch: develop
    uri: https://github.com/cloudfoundry/garden-runc-release.git
- name: gats-fork
  type: git
  source:
    branch: fork-master
    uri: https://github.com/greenhouse-org/garden-integration-tests.git
- name: gcp-windows-stemcell
  type: s3
  source:
    bucket: all-bosh-windows
    regexp: 1709/tested/gcp/light-bosh-stemcell-(.*)-google-kvm-windows2016-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: pesto-lock-pool
  type: pool
  source:
    branch: master
    pool: pesto
    private_key: {{GREENHOUSE-CI_SSH_KEY}}
    uri: git@github.com:greenhouse-ci/locks
- name: every-2hrs
  type: time
  source:
    interval: 2h
- name: version
  type: semver
  source:
    access_key_id: {{BOSH_WINDOWS_S3_ADMIN_ACCESS_KEY_ID}}
    secret_access_key: {{BOSH_WINDOWS_S3_ADMIN_SECRET_ACCESS_KEY}}
    bucket: winc-release
    initial_version: 0.0.0
    key: version
    region_name: us-east-1
- name: winc-release-github-release
  type: github-release
  source:
    user: cloudfoundry
    repository: winc-release
    drafts: true
    access_token: {{GREENHOUSE_CI_ACCESS_TOKEN}}
- name: pesto-cf-deployment
  type: bosh-deployment
  source:
    deployment: cf
    client: {{PESTO_BOSH_CLIENT}}
    client_secret: {{PESTO_BOSH_CLIENT_SECRET}}
    ca_cert: {{PESTO_BOSH_CA_CERT}}
    target: {{PESTO_BOSH_ENVIRONMENT}}
    jumpbox_url: {{PESTO_JUMPBOX_URL}}
    jumpbox_ssh_key: {{PESTO_JUMPBOX_SSH_KEY}}
    vars_store:
      provider: gcs
      config:
        bucket: cff-greenhouse-pesto
        file_name: cf/creds.yml
        json_key: {{PESTO_SERVICE_ACCOUNT_JSON}}
jobs:
- name: generate-readme
  serial: true
  serial_groups: [windows2016]
  plan:
  - aggregate:
    - get: ci
    - get: winc-release-develop
      trigger: true
  - task: winc-release-readme
    input_mapping: { winc-release: winc-release-develop }
    file: ci/tasks/winc-release-readme/task.yml
    params:
      WINC_TEST_ROOTFS: "docker:///cloudfoundry/windows2016fs:1709"
      GROOT_IMAGE_STORE: "C:\\ProgramData\\groot"
  - task: override-repo
    input_mapping: { repo: winc-release-develop, override-repo: generated-readme }
    file: ci/tasks/override-repo/task.yml
  - task: commit-changes
    file: ci/tasks/commit/task.yml
    input_mapping:
      repo: output-repo
    output_mapping:
      repo_with_commit: updated-repo
    params:
      MESSAGE: "Updated README"
  - put: winc-release-develop
    params:
      repository: updated-repo

- name: bump-lib-groot
  plan:
  - aggregate:
    - get: ci
    - get: groot-windows-develop
    - get: groot
      trigger: true
  - task: bump-vendor
    input_mapping: { source-repo: groot-windows-develop }
    file: ci/tasks/bump-vendor/task.yml
    params:
      SOURCE_IMPORT_PATH: "code.cloudfoundry.org/groot-windows"
      DEP: "code.cloudfoundry.org/groot"
  - put: groot-windows-develop
    params: { repository: bumped-repo }

- name: groot-windows
  serial: true
  serial_groups: [windows2016]
  plan:
  - aggregate:
    - get: ci
    - get: every-2hrs
      trigger: true
    - get: groot-windows-develop
      trigger: true
    - get: groot-windows-master
  - task: test
    input_mapping: { groot-windows: groot-windows-develop }
    file: ci/tasks/test-groot-windows/task.yml
  - task: merge-develop-to-master
    input_mapping: { from-repo: groot-windows-develop, to-repo: groot-windows-master}
    file: ci/tasks/merge-repo/task.yml
    params: { FROM_BRANCH: develop }
  - put: groot-windows-master
    params: { repository: merged-repo/to-repo }

- name: winc
  serial: true
  serial_groups: [windows2016]
  plan:
  - aggregate:
    - get: ci
    - get: every-2hrs
      trigger: true
    - get: winc-develop
      trigger: true
    - get: winc-master
    - get: groot-windows-master
      trigger: true
  - task: build-groot
    input_mapping: { groot-windows: groot-windows-master }
    file: ci/tasks/build-groot/task.yml
  - task: test
    input_mapping: { winc: winc-develop }
    file: ci/tasks/test-winc/task.yml
    params:
      WINC_TEST_ROOTFS: docker:///cloudfoundry/windows2016fs:1709
      WINC_TEST_PERF_CONCURRENT_CONTAINERS: 20
      WINDOWS_VERSION: 1709
  - task: merge-develop-to-master
    input_mapping: { from-repo: winc-develop, to-repo: winc-master }
    file: ci/tasks/merge-repo/task.yml
    params: { FROM_BRANCH: develop }
  - put: winc-master
    params: { repository: merged-repo/to-repo }

- name: local-gats
  serial: true
  serial_groups: [windows2016]
  plan:
  - aggregate:
    - get: ci
    - get: every-2hrs
      trigger: true
    - get: gats-fork
    - get: garden-runc-release
      trigger: true
    - get: winc-master
      passed: [winc]
      trigger: true
    - get: winc-release-develop
    - get: groot-windows-master
  - aggregate:
    - task: build-winc
      file: ci/tasks/build-binary/task.yml
      input_mapping:
        repo: winc-master
      output_mapping:
        binary-output: winc-binary
      params:
        IMPORT_PATH: "code.cloudfoundry.org/winc"
        PACKAGE: "./cmd/winc"
    - task: build-winc-network
      file: ci/tasks/build-winc-network/task.yml
      input_mapping: { winc: winc-master }
      params:
        WINDOWS_VERSION: 1709
    - task: build-groot
      input_mapping: { groot-windows: groot-windows-master }
      file: ci/tasks/build-groot/task.yml
    - task: build-nstar
      file: ci/tasks/build-binary/task.yml
      input_mapping:
        repo: winc-release-develop
      output_mapping:
        binary-output: nstar-binary
      params:
        PACKAGE: "./src/nstar"
    - task: build-garden-init
      file: ci/tasks/build-binary/task.yml
      input_mapping:
        repo: garden-runc-release
      output_mapping:
        binary-output: garden-init-binary
      params:
        PACKAGE: "src/code.cloudfoundry.org/guardian/cmd/winit"
        BINARY_NAME: "garden-init.exe"
  - task: copy-forks
    file: ci/tasks/copy-forks/task.yml
    input_mapping:
      garden-integration-tests: gats-fork
  - task: run-gats
    file: ci/tasks/run-local-gats/task.yml
    input_mapping:
      garden-runc-release: garden-runc-release-forks
    params:
      WINC_TEST_ROOTFS: docker:///cloudfoundry/windows2016fs:1709
      WINDOWS_VERSION: 1709

- name: bump-winc-release
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: winc-release-develop
    - get: winc-master
      passed:
      - local-gats
      trigger: true
    - get: groot-windows-master
      passed:
      - groot-windows
      trigger: true
  - task: bump-submodule
    file: ci/tasks/bump-submodule/task.yml
    params:
      SUBMODULE: "src/code.cloudfoundry.org/winc"
    input_mapping:
      source-repo: winc-release-develop
      module-repo: winc-master
    output_mapping:
      bumped-repo: winc-bumped
  - task: bump-submodule
    file: ci/tasks/bump-submodule/task.yml
    params:
      SUBMODULE: "src/code.cloudfoundry.org/groot-windows"
    input_mapping:
      source-repo: winc-bumped
      module-repo: groot-windows-master
    output_mapping:
      bumped-repo: winc-groot-bumped
  - task: sync-packages
    file: ci/tasks/sync-packages/task.yml
    input_mapping:
      repo: winc-groot-bumped
  - put: winc-release-develop
    params:
      repository: synced-repo
      rebase: true

- name: test-nstar
  plan:
  - aggregate:
    - get: ci
    - get: winc-release-develop
      trigger: true
  - task: run-ginkgo-exe
    file: ci/tasks/ginkgo-from-gopath-windows/task.yml
    input_mapping:
      repo: winc-release-develop
    params:
      TEST_PATH: "src/nstar"

- name: pesto-cats
  serial: true
  plan:
  - put: pesto-lock-pool
    params:
      acquire: true
  - aggregate:
    - get: ci
    - get: every-2hrs
      trigger: true
    - get: winc-release-develop
      passed: [test-nstar]
      trigger: true
    - get: cf-acceptance-tests
    - get: cf-deployment-concourse-tasks
    - get: cf-deployment
      trigger: true
    - get: gcp-windows-stemcell
  - aggregate:
    - task: get-cf-vars
      file: ci/tasks/get-gcs-file/task.yml
      output_mapping: { output: cf-vars }
      params:
        BUCKET: cff-greenhouse-pesto
        FILE_NAME: cf/vars.yml
        SERVICE_ACCOUNT_KEY: {{PESTO_SERVICE_ACCOUNT_JSON}}
    - task: get-linux-stemcell
      file: ci/tasks/get-gcp-linux-stemcell/task.yml
      output_mapping: { stemcell: gcp-linux-stemcell }
    - task: create-winc-release
      file: ci/tasks/bosh-cr/task.yml
      input_mapping:
        release: winc-release-develop
      output_mapping:
        release-tarball: winc-tarball
  - task: delete-stemcells
    file: ci/tasks/bosh-delete-stemcells/task.yml
    params:
      BOSH_CA_CERT: {{PESTO_BOSH_CA_CERT}}
      BOSH_CLIENT: {{PESTO_BOSH_CLIENT}}
      BOSH_CLIENT_SECRET: {{PESTO_BOSH_CLIENT_SECRET}}
      BOSH_DEPLOYMENT: cf
      BOSH_ENVIRONMENT: {{PESTO_BOSH_ENVIRONMENT}}
      JUMPBOX_IP: {{PESTO_JUMPBOX_IP}}
      JUMPBOX_SSH_KEY: {{PESTO_JUMPBOX_SSH_KEY}}
  - put: pesto-cf-deployment
    params:
      manifest: cf-deployment/cf-deployment.yml
      stemcells:
      - gcp-linux-stemcell/*.tgz
      - gcp-windows-stemcell/*.tgz
      releases:
      - winc-tarball/*.tgz
      ops_files:
      - cf-deployment/operations/scale-to-one-az.yml
      - cf-deployment/operations/workaround/use-3-azs-for-router.yml
      - cf-deployment/operations/windows2016-cell.yml
      - cf-deployment/operations/use-latest-windows2016-stemcell.yml
      - cf-deployment/operations/experimental/skip-consul-cell-registrations.yml
      - cf-deployment/operations/experimental/skip-consul-locks.yml
      - cf-deployment/operations/experimental/secure-service-credentials.yml
      - cf-deployment/operations/experimental/secure-service-credentials-windows2016-cell.yml
      - cf-deployment/operations/experimental/disable-consul.yml
      - cf-deployment/operations/experimental/disable-consul-windows2016.yml
      - ci/operations/windows2016-prs.yml
      - ci/operations/windows2016-debug.yml
      - ci/operations/latest-winc.yml
      - ci/operations/scale-down-windows2016.yml
      - ci/operations/enable-rdp-2016.yml
      vars_files:
      - cf-vars/vars.yml
      cleanup: true
    get_params:
      skip_export: true
  - task: enable-credhub
    file: ci/tasks/enable-credhub/task.yml
    params:
      CF_API: api.pesto.cf-app.com
      CF_USERNAME: admin
      CF_PASSWORD: {{PESTO_ADMIN_PASSWORD}}
  - task: generate-integration-config
    file: ci/tasks/generate-integration-config/task.yml
    params:
      ADMIN_PASSWORD: {{PESTO_ADMIN_PASSWORD}}
      ADMIN_USER: admin
      API: api.pesto.cf-app.com
      APPS_DOMAIN: pesto.cf-app.com
      UNALLOCATED_IP: 10.0.0.5
      WINDOWS_STACK: windows2016
      CREDHUB_MODE: assisted
      CREDHUB_SECRET: {{PESTO_CREDHUB_SECRET}}
  - task: cats
    file: cf-deployment-concourse-tasks/run-cats/task.yml
    params:
      NODES: 4
    on_success:
      task: delete-deployment
      file: ci/tasks/bosh-deld/task.yml
      params:
        BOSH_CA_CERT: {{PESTO_BOSH_CA_CERT}}
        BOSH_CLIENT: {{PESTO_BOSH_CLIENT}}
        BOSH_CLIENT_SECRET: {{PESTO_BOSH_CLIENT_SECRET}}
        BOSH_DEPLOYMENT: cf
        BOSH_ENVIRONMENT: {{PESTO_BOSH_ENVIRONMENT}}
        JUMPBOX_IP: {{PESTO_JUMPBOX_IP}}
        JUMPBOX_SSH_KEY: {{PESTO_JUMPBOX_SSH_KEY}}
  ensure:
    put: pesto-lock-pool
    params:
      release: pesto-lock-pool

- name: shipit-major
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: winc-release-develop
      passed: [pesto-cats]
    - get: version
      params: {bump: major}
  - task: finalize-release
    file: ci/tasks/finalize-release/task.yml
    input_mapping: { release: winc-release-develop }
    params:
      RELEASE_NAME: winc
      AWS_ACCESS_KEY_ID: {{BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: {{BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY}}
  - put: winc-release-develop
    params:
      repository: finalized-release/release
      tag: version/number
      tag_prefix: v
  - put: winc-release-master
    params:
      repository: finalized-release/release
  - put: version
    params: {file: version/number}
  - task: generate-github-release
    input_mapping: { release: finalized-repo }
    file: ci/tasks/generate-github-release/task.yml
  - put: winc-release-github-release
    params:
      commitish: generated-release/commitish
      name: generated-release/name
      tag: generated-release/version
      globs:
      - finalized-release/winc-*.tgz

- name: shipit-minor
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: winc-release-develop
      passed: [pesto-cats]
    - get: version
      params: {bump: minor}
  - task: finalize-release
    file: ci/tasks/finalize-release/task.yml
    input_mapping: { release: winc-release-develop }
    params:
      RELEASE_NAME: winc
      AWS_ACCESS_KEY_ID: {{BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: {{BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY}}
  - put: winc-release-develop
    params:
      repository: finalized-release/release
      tag: version/number
      tag_prefix: v
  - put: winc-release-master
    params:
      repository: finalized-release/release
  - put: version
    params: {file: version/number}
  - task: generate-github-release
    input_mapping: { release: finalized-repo }
    file: ci/tasks/generate-github-release/task.yml
  - put: winc-release-github-release
    params:
      commitish: generated-release/commitish
      name: generated-release/name
      tag: generated-release/version
      globs:
      - finalized-release/winc-*.tgz

- name: shipit-patch
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: winc-release-develop
      passed: [pesto-cats]
    - get: version
      params: {bump: patch}
  - task: finalize-release
    file: ci/tasks/finalize-release/task.yml
    input_mapping: { release: winc-release-develop }
    params:
      RELEASE_NAME: winc
      AWS_ACCESS_KEY_ID: {{BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: {{BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY}}
  - put: winc-release-develop
    params:
      repository: finalized-release/release
      tag: version/number
      tag_prefix: v
  - put: winc-release-master
    params:
      repository: finalized-release/release
  - put: version
    params: {file: version/number}
  - task: generate-github-release
    input_mapping: { release: finalized-repo }
    file: ci/tasks/generate-github-release/task.yml
  - put: winc-release-github-release
    params:
      commitish: generated-release/commitish
      name: generated-release/name
      tag: generated-release/version
      globs:
      - finalized-release/winc-*.tgz
