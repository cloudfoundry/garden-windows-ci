resource_types:
- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

resources:
- name: ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/garden-windows-ci.git
- name: groot-windows-develop
  type: git
  source:
    branch: develop
    uri: git@github.com:cloudfoundry/groot-windows.git
    private_key: ((CLOUDFOUNDRYINCUBATOR_GROOT_WINDOWS_DEPLOY_KEY))
- name: winc-develop
  type: git
  source:
    branch: develop
    uri: https://github.com/cloudfoundry/winc.git
- name: groot-windows-master
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/groot-windows.git
- name: winc-release-develop
  type: git
  source:
    branch: develop
    uri: https://github.com/cloudfoundry/winc-release.git
- name: windows1803fs-online-release-develop
  type: git
  source:
    branch: develop
    uri: git@github.com:cloudfoundry/windows1803fs-online-release.git
    private_key: ((GREENHOUSE-CI_SSH_KEY))
- name: garden-runc-release
  type: git
  source:
    branch: develop
    uri: https://github.com/cloudfoundry/garden-runc-release.git
- name: gats-fork
  type: git
  source:
    branch: fork-master
    uri: https://github.com/greenhouse-org/garden-integration-tests.git
- name: every-2hrs
  type: time
  source:
    interval: 2h
- name: cf-acceptance-tests
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-acceptance-tests
- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks
- name: cf-deployment
  type: git
  source:
    branch: release-candidate
    uri: https://github.com/cloudfoundry/cf-deployment.git
- name: gcp-windows-stemcell
  type: s3
  source:
    bucket: all-bosh-windows
    regexp: 1803/tested/gcp/light-bosh-stemcell-(.*)-google-kvm-windows2016-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: pesto-cf-deployment
  type: bosh-deployment
  source:
    deployment: cf
    client: ((PESTO_BOSH_CLIENT))
    client_secret: ((PESTO_BOSH_CLIENT_SECRET))
    ca_cert: ((PESTO_BOSH_CA_CERT))
    target: ((PESTO_BOSH_ENVIRONMENT))
    jumpbox_url: ((PESTO_JUMPBOX_URL))
    jumpbox_ssh_key: ((PESTO_JUMPBOX_SSH_KEY))
    vars_store:
      provider: gcs
      config:
        bucket: cff-greenhouse-pesto
        file_name: cf/creds.yml
        json_key: ((PESTO_SERVICE_ACCOUNT_JSON))
- name: pesto-lock-pool
  type: pool
  source:
    branch: master
    pool: pesto
    private_key: ((GREENHOUSE-CI_SSH_KEY))
    uri: git@github.com:greenhouse-ci/locks

jobs:
- name: groot-windows
  serial: true
  serial_groups: [windows2016]
  plan:
  - aggregate:
    - get: ci
      tags: [vsphere]
    - get: groot-windows-develop
      trigger: true
      tags: [vsphere]
  - task: test
    input_mapping: { groot-windows: groot-windows-develop }
    file: ci/tasks/test-groot-windows/task.yml
    tags: [((os_version))]

- name: winc
  serial: true
  serial_groups: [window2016]
  plan:
  - aggregate:
    - get: ci
      tags: [vsphere]
    - get: every-2hrs
      trigger: true
      tags: [vsphere]
    - get: winc-develop
      trigger: true
      tags: [vsphere]
    - get: groot-windows-master
      trigger: true
      tags: [vsphere]
  - task: build-groot
    input_mapping: { groot-windows: groot-windows-master }
    file: ci/tasks/build-groot/task.yml
    tags: [((os_version))]
  - task: test
    input_mapping: { winc: winc-develop }
    file: ci/tasks/test-winc/task.yml
    tags: [((os_version))]
    params:
      WINC_TEST_ROOTFS: docker:///cloudfoundry/windows2016fs:((os_version))
      WINC_TEST_PERF_CONCURRENT_CONTAINERS: 20
      WINDOWS_VERSION: ((os_version))

- name: local-gats
  serial: true
  serial_groups: [window2016]
  plan:
  - aggregate:
    - get: ci
      tags: [vsphere]
    - get: every-2hrs
      trigger: true
      tags: [vsphere]
    - get: gats-fork
      tags: [vsphere]
    - get: garden-runc-release
      trigger: true
      tags: [vsphere]
    - get: winc-develop
      passed: [winc]
      trigger: true
      tags: [vsphere]
    - get: winc-release-develop
      tags: [vsphere]
    - get: groot-windows-master
      tags: [vsphere]
  - aggregate:
    - task: build-winc
      file: ci/tasks/build-binary/task.yml
      tags: [((os_version))]
      input_mapping:
        repo: winc-develop
      output_mapping:
        binary-output: winc-binary
      params:
        IMPORT_PATH: "code.cloudfoundry.org/winc"
        PACKAGE: "./cmd/winc"
    - task: build-winc-network
      file: ci/tasks/build-winc-network/task.yml
      tags: [((os_version))]
      input_mapping: { winc: winc-develop }
      params:
        WINDOWS_VERSION: ((os_version))
    - task: build-groot
      input_mapping: { groot-windows: groot-windows-master }
      file: ci/tasks/build-groot/task.yml
      tags: [((os_version))]
    - task: build-nstar
      file: ci/tasks/build-binary/task.yml
      tags: [((os_version))]
      input_mapping:
        repo: winc-release-develop
      output_mapping:
        binary-output: nstar-binary
      params:
        PACKAGE: "./src/nstar"
    - task: build-garden-init
      file: ci/tasks/build-binary/task.yml
      tags: [((os_version))]
      input_mapping:
        repo: garden-runc-release
      output_mapping:
        binary-output: garden-init-binary
      params:
        PACKAGE: "src/code.cloudfoundry.org/guardian/cmd/winit"
        BINARY_NAME: "garden-init.exe"
  - task: copy-forks
    file: ci/tasks/copy-forks/task.yml
    tags: [vsphere]
    input_mapping:
      garden-integration-tests: gats-fork
  - task: run-gats
    file: ci/tasks/run-local-gats/task.yml
    tags: [((os_version))]
    input_mapping:
      garden-runc-release: garden-runc-release-forks
    params:
      WINC_TEST_ROOTFS: docker:///cloudfoundry/windows2016fs:((os_version))
      WINDOWS_VERSION: ((os_version))

- name: pesto-cats
  serial: true
  plan:
  - put: pesto-lock-pool
    params:
      acquire: true
  - aggregate:
    - get: ci
    - get: every-2hrs
      trigger: true
    - get: winc-release-develop
      trigger: true
    - get: windows1803fs-online-release-develop
    - get: cf-acceptance-tests
    - get: cf-deployment-concourse-tasks
    - get: cf-deployment
      trigger: true
    - get: gcp-windows-stemcell
  - aggregate:
    - task: get-cf-vars
      file: ci/tasks/get-gcs-file/task.yml
      output_mapping: { output: cf-vars }
      params:
        BUCKET: cff-greenhouse-pesto
        FILE_NAME: cf/vars.yml
        SERVICE_ACCOUNT_KEY: ((PESTO_SERVICE_ACCOUNT_JSON))
    - task: get-linux-stemcell
      file: ci/tasks/get-gcp-linux-stemcell/task.yml
      output_mapping: { stemcell: gcp-linux-stemcell }
    - task: create-winc-release
      file: ci/tasks/bosh-cr/task.yml
      input_mapping:
        release: winc-release-develop
      output_mapping:
        release-tarball: winc-tarball
    - task: create-windows1803fs-release
      file: ci/tasks/bosh-cr/task.yml
      input_mapping:
        release: windows1803fs-online-release-develop
      output_mapping:
        release-tarball: windows1803fs-tarball
  - task: create-windows1803fs-opsfile
    file: ci/tasks/write-windows2016fs-opsfile/task.yml
    params:
      FS_VERSION: windows1803fs
    input_mapping: { release-tarball: windows1803fs-tarball }
  - put: pesto-cf-deployment
    params:
      manifest: cf-deployment/cf-deployment.yml
      stemcells:
      - gcp-linux-stemcell/*.tgz
      - gcp-windows-stemcell/*.tgz
      releases:
      - winc-tarball/*.tgz
      - windows1803fs-tarball/*.tgz
      ops_files:
      - cf-deployment/operations/scale-to-one-az.yml
      - cf-deployment/operations/workaround/use-3-azs-for-router.yml
      - ci/operations/windows1803-cell.yml
      - cf-deployment/operations/use-latest-windows2016-stemcell.yml
      - cf-deployment/operations/experimental/use-bosh-dns.yml
      - cf-deployment/operations/experimental/use-bosh-dns-for-containers.yml
      - ci/operations/use-bosh-dns-for-windows1803-containers.yml
      - cf-deployment/operations/experimental/skip-consul-cell-registrations.yml
      - cf-deployment/operations/experimental/skip-consul-locks.yml
      - cf-deployment/operations/experimental/secure-service-credentials.yml
      - cf-deployment/operations/experimental/secure-service-credentials-windows2016-cell.yml
      - cf-deployment/operations/experimental/disable-consul.yml
      - cf-deployment/operations/experimental/disable-consul-windows2016.yml
      - ci/operations/windows2016-prs.yml
      - ci/operations/windows2016-debug.yml
      - ci/operations/latest-winc.yml
      - ci/operations/scale-down-windows2016.yml
      - windowsfs-opsfile/specified-windowsfs-version.yml
      vars_files:
      - cf-vars/vars.yml
      cleanup: true
    get_params:
      skip_export: true
  - task: enable-credhub
    file: ci/tasks/enable-credhub/task.yml
    params:
      CF_API: api.pesto.cf-app.com
      CF_USERNAME: admin
      CF_PASSWORD: ((PESTO_ADMIN_PASSWORD))
  - task: generate-integration-config
    file: ci/tasks/generate-integration-config/task.yml
    params:
      ADMIN_PASSWORD: ((PESTO_ADMIN_PASSWORD))
      ADMIN_USER: admin
      API: api.pesto.cf-app.com
      APPS_DOMAIN: pesto.cf-app.com
      UNALLOCATED_IP: 10.0.0.5
      WINDOWS_STACK: windows2016
      CREDHUB_MODE: assisted
      CREDHUB_SECRET: ((PESTO_CREDHUB_SECRET))
  - task: cats
    file: cf-deployment-concourse-tasks/run-cats/task.yml
    params:
      NODES: 4
    on_success:
      task: delete-deployment
      file: ci/tasks/bosh-deld/task.yml
      params:
        BOSH_CA_CERT: ((PESTO_BOSH_CA_CERT))
        BOSH_CLIENT: ((PESTO_BOSH_CLIENT))
        BOSH_CLIENT_SECRET: ((PESTO_BOSH_CLIENT_SECRET))
        BOSH_DEPLOYMENT: cf
        BOSH_ENVIRONMENT: ((PESTO_BOSH_ENVIRONMENT))
        JUMPBOX_IP: ((PESTO_JUMPBOX_IP))
        JUMPBOX_SSH_KEY: ((PESTO_JUMPBOX_SSH_KEY))
  ensure:
    put: pesto-lock-pool
    params:
      release: pesto-lock-pool

