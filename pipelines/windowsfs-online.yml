resource_types:
- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

resources:

# Git

- name: ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/garden-windows-ci.git

- name: windowsfs-online-release-develop
  type: git
  source:
    branch: develop
    uri: ((windowsfs-online-release-develop-uri))
    private_key: ((GREENHOUSE-CI_SSH_KEY))

- name: windowsfs-online-release-master
  type: git
  source:
    branch: master
    uri: ((windowsfs-online-release-master-uri))
    private_key: ((GREENHOUSE-CI_SSH_KEY))

- name: hydrator
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/hydrator.git
    private_key: ((CLOUDFOUNDRY_HYDRATOR_DEPLOY_KEY))

- name: windows2016fs
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/windows2016fs.git
    private_key: ((CLOUDFOUNDRYINCUBATOR_WINDOWS2016FS_DEPLOY_KEY))
    ignore_paths: [ ((os-version))/Dockerfile ]

- name: windowsfs-dockerfile
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/windows2016fs.git
    paths: [ ((os-version))/Dockerfile ]

- name: cf-acceptance-tests
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-acceptance-tests

- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git

- name: cf-deployment
  type: git
  source:
    branch: release-candidate
    uri: https://github.com/cloudfoundry/cf-deployment.git

- name: cf-deployment-with-2019-cell
  type: git
  source:
    branch: add-windows-2019-rc
    uri: https://github.com/greenhouse-org/cf-deployment.git

- name: winc-release-develop
  type: git
  source:
    branch: develop
    uri: https://github.com/cloudfoundry/winc-release.git

# GitHub Release

- name: git-setup
  type: github-release
  source:
    user: git-for-windows
    repository: git
    access_token: ((GREENHOUSE_CI_ACCESS_TOKEN))

- name: windowsfs-online-release-github-release
  type: github-release
  source:
    user: cloudfoundry
    repository: ((windowsfs-online-release-repo))
    drafts: true
    access_token: ((GREENHOUSE_CI_ACCESS_TOKEN))

# S3

- name: tar
  type: s3
  source:
    bucket: bosh-windows-dependencies
    regexp: tar-(.*).exe
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))

- name: gcp-windows-stemcell
  type: s3
  source:
    bucket: all-bosh-windows
    regexp: ((stemcell-regexp))
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))

# Semver

- name: image-version
  type: semver
  source:
    access_key_id: ((BOSH_WINDOWS_S3_ADMIN_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_S3_ADMIN_SECRET_ACCESS_KEY))
    bucket: ((fs-version))
    initial_version: ((initial-image-version))
    key: image-version
    region_name: us-east-1

- name: windowsfs-online-release-version
  type: semver
  source:
    access_key_id: ((BOSH_WINDOWS_S3_ADMIN_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_S3_ADMIN_SECRET_ACCESS_KEY))
    bucket: windowsfs
    initial_version: ((initial-online-release-version))
    key: windowsfs-online-release-version
    region_name: us-east-1

# BOSH Deployment

- name: aioli-cf-deployment
  type: bosh-deployment
  source:
    deployment: cf
    client: ((AIOLI_BOSH_CLIENT))
    client_secret: ((AIOLI_BOSH_CLIENT_SECRET))
    ca_cert: ((AIOLI_BOSH_CA_CERT))
    target: ((AIOLI_BOSH_ENVIRONMENT))
    jumpbox_url: ((AIOLI_JUMPBOX_URL))
    jumpbox_ssh_key: ((AIOLI_JUMPBOX_SSH_KEY))
    vars_store:
      provider: gcs
      config:
        bucket: cf-garden-windows-dev
        file_name: aioli/cf/creds.yml
        json_key: ((GARDEN_WINDOWS_DEV_SERVICE_ACCOUNT_JSON))

- name: aioli-smoke-test-deployment
  type: bosh-deployment
  source:
    deployment: ((fs-version))
    client: ((AIOLI_BOSH_CLIENT))
    client_secret: ((AIOLI_BOSH_CLIENT_SECRET))
    ca_cert: ((AIOLI_BOSH_CA_CERT))
    target: ((AIOLI_BOSH_ENVIRONMENT))
    jumpbox_url: ((AIOLI_JUMPBOX_URL))
    jumpbox_ssh_key: ((AIOLI_JUMPBOX_SSH_KEY))

# Lock Pool

- name: aioli-lock-pool
  type: pool
  source:
    branch: master
    pool: aioli
    private_key: ((GREENHOUSE-CI_SSH_KEY))
    uri: git@github.com:greenhouse-ci/locks

groups:
- name: build-push-bump
  jobs:
    - bump-windowsfs-online-release-windows2016fs
    - bump-windowsfs-online-release-hydrator
    - build-and-push
    - create-tracker-story
- name: windowsfs-online-release
  jobs:
    - aioli-online-cats
    - aioli-online-smoke-test
    - shipit-online-major
    - shipit-online-minor
    - shipit-online-patch

jobs:

- name: build-and-push
  serial: true
  plan:
  - aggregate:
    - get: ci
      tags: ((resource-get-tag))
    - get: windows2016fs
      tags: ((resource-get-tag))
    - get: windowsfs-dockerfile
      tags: ((resource-get-tag))
      trigger: true
    - get: git-setup
      tags: ((resource-get-tag))
      trigger: true
      params:
        globs: [Git-*-64-bit.exe]
    - get: tar
      tags: ((resource-get-tag))
      trigger: ((windowsfs-uses-tar))
    - get: image-version
      tags: ((resource-get-tag))
      params: {bump: patch}
  - task: build-and-push
    tags: ((task-tag))
    file: ci/tasks/docker-build-and-push/task.yml
    input_mapping:
      repo: windowsfs-dockerfile
      version: image-version
    params:
      EPHEMERAL_DISK_TEMP_PATH: "C:\\var\\vcap\\data\\tmp"
      DOCKERFILE: repo/((os-version))/Dockerfile
      IMAGE_NAME: cloudfoundry/windows2016fs
      DOCKER_USERNAME: ((DOCKER_USERNAME))
      DOCKER_PASSWORD: ((DOCKER_PASSWORD))
      OS_VERSION: "((os-version))"
  - task: update-image-tag
    file: ci/tasks/update-image-tag/task.yml
    params:
      OS_VERSION: "((os-version))"
  - task: commit-changes
    file: ci/tasks/commit/task.yml
    input_mapping:
      repo: windows2016fs-updated
    output_mapping:
      repo_with_commit: windowsfs-commit
    params:
      MESSAGE: "Updated image tag"
  - put: windows2016fs
    params:
      repository: windowsfs-commit
      rebase: true
  - put: image-version
    params: {file: image-version/version}

- name: create-tracker-story
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: image-version
      passed: [build-and-push]
      trigger: true
  - task: create-story
    file: ci/tasks/create-rootfs-tracker-story/task.yml
    input_mapping:
      version: image-version
    params:
      TRACKER_TOKEN: ((TRACKER_GITBOT_TOKEN))
      TRACKER_PROJECT_ID: "((GARDEN_WINDOWS_PROJECT_ID))"
      FS_VERSION: ((fs-version))

- name: bump-windowsfs-online-release-windows2016fs
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: windowsfs-online-release-develop
    - get: windows2016fs
      trigger: true
  - task: bump-windowsfs-online-release
    file: ci/tasks/bump-submodule/task.yml
    params:
      SUBMODULE: "src/code.cloudfoundry.org/windows2016fs"
    input_mapping:
      source-repo: windowsfs-online-release-develop
      module-repo: windows2016fs
  - put: windowsfs-online-release-develop
    params:
      repository: bumped-repo
      rebase: true

- name: bump-windowsfs-online-release-hydrator
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: windowsfs-online-release-develop
    - get: hydrator
      trigger: true
  - task: bump-windowsfs-online-release
    file: ci/tasks/bump-submodule/task.yml
    params:
      SUBMODULE: "src/code.cloudfoundry.org/hydrator"
    input_mapping:
      source-repo: windowsfs-online-release-develop
      module-repo: hydrator
  - put: windowsfs-online-release-develop
    params:
      repository: bumped-repo
      rebase: true

- name: aioli-online-cats
  serial: true
  plan:
  - put: aioli-lock-pool
    params:
      acquire: true
  - aggregate:
    - get: ci
    - get: windowsfs-online-release-develop
      trigger: true
    - get: cf-acceptance-tests
    - get: cf-deployment-concourse-tasks
    - get: cf-deployment
    - get: cf-deployment-with-2019-cell
    - get: gcp-windows-stemcell
  - aggregate:
    - task: get-cf-vars
      file: ci/tasks/get-gcs-file/task.yml
      output_mapping: { output: cf-vars }
      params:
        BUCKET: cf-garden-windows-dev
        FILE_NAME: aioli/cf/vars.yml
        SERVICE_ACCOUNT_KEY: ((GARDEN_WINDOWS_DEV_SERVICE_ACCOUNT_JSON))
    - task: get-linux-stemcell
      file: ci/tasks/get-gcp-linux-stemcell/task.yml
      input_mapping:
        cf-deployment: cf-deployment-with-2019-cell
      output_mapping:
        stemcell: gcp-linux-stemcell
    - task: create-windowsfs-release
      file: ci/tasks/bosh-cr/task.yml
      input_mapping:
        release: windowsfs-online-release-develop
      output_mapping:
        release-tarball: windowsfs-tarball
  - task: create-windowsfs-opsfile
    file: ci/tasks/write-windows2016fs-opsfile/task.yml
    params:
      FS_VERSION: windowsfs
    input_mapping:
      release-tarball: windowsfs-tarball
  - task: delete-deployments
    file: ci/tasks/bosh-delete-deployments/task.yml
    params:
      BOSH_CA_CERT: ((AIOLI_BOSH_CA_CERT))
      BOSH_CLIENT: ((AIOLI_BOSH_CLIENT))
      BOSH_CLIENT_SECRET: ((AIOLI_BOSH_CLIENT_SECRET))
      BOSH_ENVIRONMENT: ((AIOLI_BOSH_ENVIRONMENT))
      JUMPBOX_IP: ((AIOLI_JUMPBOX_IP))
      JUMPBOX_SSH_KEY: ((AIOLI_JUMPBOX_SSH_KEY))
  - task: delete-stemcells
    file: ci/tasks/bosh-delete-stemcells/task.yml
    params:
      BOSH_CA_CERT: ((AIOLI_BOSH_CA_CERT))
      BOSH_CLIENT: ((AIOLI_BOSH_CLIENT))
      BOSH_CLIENT_SECRET: ((AIOLI_BOSH_CLIENT_SECRET))
      BOSH_DEPLOYMENT: cf
      BOSH_ENVIRONMENT: ((AIOLI_BOSH_ENVIRONMENT))
      JUMPBOX_IP: ((AIOLI_JUMPBOX_IP))
      JUMPBOX_SSH_KEY: ((AIOLI_JUMPBOX_SSH_KEY))
  - put: aioli-cf-deployment
    params:
      manifest: cf-deployment-with-2019-cell/cf-deployment.yml
      stemcells:
      - gcp-linux-stemcell/*.tgz
      - gcp-windows-stemcell/*.tgz
      releases:
      - windowsfs-tarball/*.tgz
      ops_files:
      - cf-deployment/operations/scale-to-one-az.yml
      - ci/operations/use-3-azs-for-router.yml
      - ((windows-cell-ops-file))
      - ((latest-windows-stemcell-ops-file))
      - ((windows-rdp-ops-file))
      - windowsfs-opsfile/specified-windowsfs-version.yml
      vars_files:
      - cf-vars/vars.yml
      cleanup: true
    get_params:
      skip_export: true
  - task: generate-integration-config
    file: ci/tasks/generate-integration-config/task.yml
    params:
      ADMIN_PASSWORD: ((AIOLI_ADMIN_PASSWORD))
      ADMIN_USER: admin
      API: api.aioli.cf-app.com
      APPS_DOMAIN: aioli.cf-app.com
      UNALLOCATED_IP: 10.0.0.5
      WINDOWS_STACK: windows2016
  - task: cats
    file: cf-deployment-concourse-tasks/run-cats/task.yml
    params:
      NODES: 4
    on_success:
      task: delete-deployment
      file: ci/tasks/bosh-deld/task.yml
      params:
        BOSH_CA_CERT: ((AIOLI_BOSH_CA_CERT))
        BOSH_CLIENT: ((AIOLI_BOSH_CLIENT))
        BOSH_CLIENT_SECRET: ((AIOLI_BOSH_CLIENT_SECRET))
        BOSH_DEPLOYMENT: cf
        BOSH_ENVIRONMENT: ((AIOLI_BOSH_ENVIRONMENT))
        JUMPBOX_IP: ((AIOLI_JUMPBOX_IP))
        JUMPBOX_SSH_KEY: ((AIOLI_JUMPBOX_SSH_KEY))
  ensure:
    put: aioli-lock-pool
    params:
      release: aioli-lock-pool

- name: aioli-online-smoke-test
  serial: true
  plan:
  - put: aioli-lock-pool
    params:
      acquire: true
  - aggregate:
    - get: ci
    - get: windowsfs-online-release-develop
      trigger: true
    - get: winc-release-develop
      trigger: true
    - get: gcp-windows-stemcell
  - aggregate:
    - task: create-windowsfs-release
      file: ci/tasks/bosh-cr/task.yml
      input_mapping:
        release: windowsfs-online-release-develop
      output_mapping:
        release-tarball: windowsfs-tarball
    - task: create-winc-release
      file: ci/tasks/bosh-cr/task.yml
      input_mapping:
        release: winc-release-develop
      output_mapping:
        release-tarball: winc-tarball
  - task: delete-deployments
    file: ci/tasks/bosh-delete-deployments/task.yml
    params:
      BOSH_CA_CERT: ((AIOLI_BOSH_CA_CERT))
      BOSH_CLIENT: ((AIOLI_BOSH_CLIENT))
      BOSH_CLIENT_SECRET: ((AIOLI_BOSH_CLIENT_SECRET))
      BOSH_ENVIRONMENT: ((AIOLI_BOSH_ENVIRONMENT))
      JUMPBOX_IP: ((AIOLI_JUMPBOX_IP))
      JUMPBOX_SSH_KEY: ((AIOLI_JUMPBOX_SSH_KEY))
  - task: delete-stemcells
    file: ci/tasks/bosh-delete-stemcells/task.yml
    params:
      BOSH_CA_CERT: ((AIOLI_BOSH_CA_CERT))
      BOSH_CLIENT: ((AIOLI_BOSH_CLIENT))
      BOSH_CLIENT_SECRET: ((AIOLI_BOSH_CLIENT_SECRET))
      BOSH_ENVIRONMENT: ((AIOLI_BOSH_ENVIRONMENT))
      JUMPBOX_IP: ((AIOLI_JUMPBOX_IP))
      JUMPBOX_SSH_KEY: ((AIOLI_JUMPBOX_SSH_KEY))
  - put: aioli-smoke-test-deployment
    params:
      manifest: windowsfs-online-release-develop/manifests/smoke-test-((os-version)).yml
      stemcells:
      - gcp-windows-stemcell/*.tgz
      releases:
      - windowsfs-tarball/*.tgz
      - winc-tarball/*.tgz
      cleanup: true
    get_params:
      skip_export: true
  - task: smoke-test
    file: ci/tasks/fs-smoke-test/task.yml
    params:
      FS_VERSION: ((fs-version))
      BOSH_CA_CERT: ((AIOLI_BOSH_CA_CERT))
      BOSH_CLIENT: ((AIOLI_BOSH_CLIENT))
      BOSH_CLIENT_SECRET: ((AIOLI_BOSH_CLIENT_SECRET))
      BOSH_ENVIRONMENT: ((AIOLI_BOSH_ENVIRONMENT))
      JUMPBOX_IP: ((AIOLI_JUMPBOX_IP))
      JUMPBOX_SSH_KEY: ((AIOLI_JUMPBOX_SSH_KEY))
    on_success:
      task: delete-deployment
      file: ci/tasks/bosh-deld/task.yml
      params:
        BOSH_CA_CERT: ((AIOLI_BOSH_CA_CERT))
        BOSH_CLIENT: ((AIOLI_BOSH_CLIENT))
        BOSH_CLIENT_SECRET: ((AIOLI_BOSH_CLIENT_SECRET))
        BOSH_DEPLOYMENT: ((fs-version))
        BOSH_ENVIRONMENT: ((AIOLI_BOSH_ENVIRONMENT))
        JUMPBOX_IP: ((AIOLI_JUMPBOX_IP))
        JUMPBOX_SSH_KEY: ((AIOLI_JUMPBOX_SSH_KEY))
  ensure:
    put: aioli-lock-pool
    params:
      release: aioli-lock-pool

- name: shipit-online-major
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: windowsfs-online-release-develop
      passed: [aioli-online-cats, aioli-online-smoke-test]
    - get: windowsfs-online-release-master
    - get: windowsfs-online-release-version
      params: {bump: major}
  - task: finalize-release
    file: ci/tasks/finalize-release/task.yml
    input_mapping:
      release: windowsfs-online-release-develop
      version: windowsfs-online-release-version
    params:
      RELEASE_NAME: windowsfs
      AWS_ACCESS_KEY_ID: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
      AWS_SECRET_ACCESS_KEY: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
      CI_SKIP: true
  - put: windowsfs-online-release-develop
    params:
      repository: finalized-release/release
      tag: windowsfs-online-release-version/number
      tag_prefix: v
  - put: windowsfs-online-release-master
    params:
      repository: finalized-release/release
  - put: windowsfs-online-release-version
    params: {file: windowsfs-online-release-version/number}
  - task: generate-github-release
    input_mapping:
      release: finalized-repo
      version: windowsfs-online-release-version
    file: ci/tasks/generate-github-release/task.yml
  - put: windowsfs-online-release-github-release
    params:
      commitish: generated-release/commitish
      name: generated-release/name
      tag: generated-release/version
      globs:
      - ((finalized-release-glob))

- name: shipit-online-minor
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: windowsfs-online-release-develop
      passed: [aioli-online-cats, aioli-online-smoke-test]
    - get: windowsfs-online-release-master
    - get: windowsfs-online-release-version
      params: {bump: minor}
  - task: finalize-release
    file: ci/tasks/finalize-release/task.yml
    input_mapping:
      release: windowsfs-online-release-develop
      version: windowsfs-online-release-version
    params:
      RELEASE_NAME: windowsfs
      AWS_ACCESS_KEY_ID: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
      AWS_SECRET_ACCESS_KEY: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
      CI_SKIP: true
  - put: windowsfs-online-release-develop
    params:
      repository: finalized-release/release
      tag: windowsfs-online-release-version/number
      tag_prefix: v
  - put: windowsfs-online-release-master
    params:
      repository: finalized-release/release
  - put: windowsfs-online-release-version
    params: {file: windowsfs-online-release-version/number}
  - task: generate-github-release
    input_mapping:
      release: finalized-repo
      version: windowsfs-online-release-version
    file: ci/tasks/generate-github-release/task.yml
  - put: windowsfs-online-release-github-release
    params:
      commitish: generated-release/commitish
      name: generated-release/name
      tag: generated-release/version
      globs:
      - ((finalized-release-glob))

- name: shipit-online-patch
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: windowsfs-online-release-develop
      passed: [aioli-online-cats, aioli-online-smoke-test]
    - get: windowsfs-online-release-master
    - get: windowsfs-online-release-version
      params: {bump: patch}
  - task: finalize-release
    file: ci/tasks/finalize-release/task.yml
    input_mapping:
      release: windowsfs-online-release-develop
      version: windowsfs-online-release-version
    params:
      RELEASE_NAME: windowsfs
      AWS_ACCESS_KEY_ID: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
      AWS_SECRET_ACCESS_KEY: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
      CI_SKIP: true
  - put: windowsfs-online-release-develop
    params:
      repository: finalized-release/release
      tag: windowsfs-online-release-version/number
      tag_prefix: v
  - put: windowsfs-online-release-master
    params:
      repository: finalized-release/release
  - put: windowsfs-online-release-version
    params: {file: windowsfs-online-release-version/number}
  - task: generate-github-release
    input_mapping:
      release: finalized-repo
      version: windowsfs-online-release-version
    file: ci/tasks/generate-github-release/task.yml
  - put: windowsfs-online-release-github-release
    params:
      commitish: generated-release/commitish
      name: generated-release/name
      tag: generated-release/version
      globs:
      - ((finalized-release-glob))
