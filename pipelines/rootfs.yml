resource_types:
- name: command-runner
  type: docker-image
  source:
    repository: cloudfoundrydevelopers/command-runner-resource
    tag: latest
- name: cron-resource
  type: docker-image
  source:
    repository: cftoolsmiths/cron-resource
- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

groups:
- name: online
  jobs:
  - build-and-push-2019
  - update-windowsfs-online-2019
  - aioli-online-cats
  - aioli-online-smoke-test
  - generate-rootfs-metadata
  - shipit-major
  - shipit-minor
  - shipit-patch

- name: offline
  jobs:
  - build-and-push-2019
  - update-windowsfs-offline-2019
  - sriracha-offline-cats
  - sriracha-offline-smoke-test
  - generate-rootfs-metadata
  - shipit-major
  - shipit-minor
  - shipit-patch

- name: bump-submodules
  jobs:
    - bump-go-online
    - bump-hydrator-online
    - bump-go-offline
    - bump-hydrator-offline

resources:
- name: vcredist-ucrt
  type: command-runner
  source:
    version_key: "url"
    check_command: "curl --location --silent --write-out %{url_effective} --request HEAD https://aka.ms/vs/16/release/vc_redist.x64.exe"
    in_command:    "curl --location --silent --fail --output $1/vcredist-ucrt.x64.exe https://aka.ms/vs/16/release/vc_redist.x64.exe"
- name: vcredist-ucrt-x86
  type: command-runner
  source:
    version_key: "url"
    check_command: "curl --location --silent --write-out %{url_effective} --request HEAD https://aka.ms/vs/16/release/vc_redist.x86.exe"
    in_command:    "curl --location --silent --fail --output $1/vcredist-ucrt.x86.exe https://aka.ms/vs/16/release/vc_redist.x86.exe"
- name: vcredist-2010
  type: command-runner
  source:
    version_key: "2010-hardcoded-url"
    check_command: "echo https://download.microsoft.com/download/1/6/5/165255E7-1014-4D0A-B094-B6A430A6BFFC/vcredist_x64.exe"
    in_command:    "curl --silent --fail --output $1/vcredist-2010.x64.exe https://download.microsoft.com/download/1/6/5/165255E7-1014-4D0A-B094-B6A430A6BFFC/vcredist_x64.exe"
- name: vcredist-2010-x86
  type: command-runner
  source:
    version_key: "2010-hardcoded-url"
    check_command: "echo https://download.microsoft.com/download/1/6/5/165255E7-1014-4D0A-B094-B6A430A6BFFC/vcredist_x86.exe"
    in_command:    "curl --silent --fail --output $1/vcredist-2010.x86.exe https://download.microsoft.com/download/1/6/5/165255E7-1014-4D0A-B094-B6A430A6BFFC/vcredist_x86.exe"
- name: dotnet-48-installer
  type: command-runner
  source:
    version_key: "dotnet-installer-hardcoded-url"
    check_command: "echo https://download.visualstudio.microsoft.com/download/pr/014120d7-d689-4305-befd-3cb711108212/0fd66638cde16859462a6243a4629a50/ndp48-x86-x64-allos-enu.exe"
    in_command:    "curl --silent --fail --output $1/dotnet-48-installer.exe https://download.visualstudio.microsoft.com/download/pr/014120d7-d689-4305-befd-3cb711108212/0fd66638cde16859462a6243a4629a50/ndp48-x86-x64-allos-enu.exe"

- name: windowsfs-online-release-develop-2019
  type: git
  source:
    branch: develop
    uri: git@github.com:cloudfoundry/windowsfs-online-release.git
    private_key: ((GREENHOUSE-CI_SSH_KEY))
    git_config:
    - name: user.email
      value: "pivotal-netgarden-eng@pivotal.io"
    - name: user.name
      value: "Greenhouse CI"

- name: windowsfs-offline-release-develop-2019
  type: git
  source:
    branch: develop
    uri: git@github.com:cloudfoundry/windows2019fs-release.git
    private_key: ((GREENHOUSE-CI_SSH_KEY))
    git_config:
    - name: user.email
      value: "pivotal-netgarden-eng@pivotal.io"
    - name: user.name
      value: "Greenhouse CI"

- name: windowsfs-online-release-master-2019
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/windowsfs-online-release.git
    private_key: ((GREENHOUSE-CI_SSH_KEY))
    git_config:
    - name: user.email
      value: "pivotal-netgarden-eng@pivotal.io"
    - name: user.name
      value: "Greenhouse CI"

- name: windowsfs-offline-release-master-2019
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/windows2019fs-release.git
    private_key: ((GREENHOUSE-CI_SSH_KEY))
    git_config:
    - name: user.email
      value: "pivotal-netgarden-eng@pivotal.io"
    - name: user.name
      value: "Greenhouse CI"

- name: cf-acceptance-tests
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-acceptance-tests

- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git

- name: cf-deployment
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment.git
    tag_filter: v*

- name: gcp-windows-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-windows2019-go_agent

- name: garden-windows-environments
  type: git
  source:
    branch: master
    private_key: ((GREENHOUSE-CI_SSH_KEY))
    uri: git@github.com:pivotal/garden-windows-environments

- name: winc-release-master
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/winc-release.git

- name: aioli-cf-deployment
  type: bosh-deployment
  source:
    deployment: cf
    client: ((AIOLI_BOSH_CLIENT))
    client_secret: ((AIOLI_BOSH_CLIENT_SECRET))
    ca_cert: ((AIOLI_BOSH_CA_CERT))
    target: ((AIOLI_BOSH_ENVIRONMENT))
    jumpbox_url: ((AIOLI_JUMPBOX_IP)):22
    jumpbox_ssh_key: ((AIOLI_JUMPBOX_SSH_KEY))
    skip_check: true

- name: aioli-smoke-test-deployment
  type: bosh-deployment
  source:
    deployment: windows2019fs
    client: ((AIOLI_BOSH_CLIENT))
    client_secret: ((AIOLI_BOSH_CLIENT_SECRET))
    ca_cert: ((AIOLI_BOSH_CA_CERT))
    target: ((AIOLI_BOSH_ENVIRONMENT))
    jumpbox_url: ((AIOLI_JUMPBOX_IP)):22
    jumpbox_ssh_key: ((AIOLI_JUMPBOX_SSH_KEY))
    skip_check: true

- name: sriracha-cf-deployment
  type: bosh-deployment
  source:
    deployment: cf
    skip_check: true
    client: ((SRIRACHA_BOSH_CLIENT))
    client_secret: ((SRIRACHA_BOSH_CLIENT_SECRET))
    ca_cert: ((SRIRACHA_BOSH_CA_CERT))
    target: ((SRIRACHA_BOSH_ENVIRONMENT))
    jumpbox_url: ((SRIRACHA_JUMPBOX_IP)):22
    jumpbox_ssh_key: ((SRIRACHA_JUMPBOX_SSH_KEY))

- name: sriracha-smoke-test-deployment
  type: bosh-deployment
  source:
    deployment: windows2019fs
    skip_check: true
    client: ((SRIRACHA_BOSH_CLIENT))
    client_secret: ((SRIRACHA_BOSH_CLIENT_SECRET))
    ca_cert: ((SRIRACHA_BOSH_CA_CERT))
    target: ((SRIRACHA_BOSH_ENVIRONMENT))
    jumpbox_url: ((SRIRACHA_JUMPBOX_IP)):22
    jumpbox_ssh_key: ((SRIRACHA_JUMPBOX_SSH_KEY))

# Git

- name: ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/garden-windows-ci.git

- name: windows2016fs-master
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/windows2016fs.git
    private_key: ((CLOUDFOUNDRYINCUBATOR_WINDOWS2016FS_DEPLOY_KEY))

- name: windowsfs-dockerfile-2019
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/windows2016fs.git
    paths: [ 2019/Dockerfile ]

- name: hydrator
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/hydrator.git
    private_key: ((CLOUDFOUNDRY_HYDRATOR_DEPLOY_KEY))

- name: golang-release
  type: git
  source:
    uri: https://github.com/bosh-packages/golang-release.git
    tag_filter: v*
# Docker Image

- name: windowsservercore-2019
  type: docker-image
  source:
    repository: mcr.microsoft.com/windows/servercore
    tag: "1809-amd64"

# Git for Windows Release

- name: git-setup
  type: github-release
  source:
    user: git-for-windows
    repository: git
    access_token: ((GREENHOUSE_CI_ACCESS_TOKEN))

# S3

- name: kb-metadata
  type: s3
  source:
    bucket: rootfs-release-notes
    versioned_file: kb-metadata
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: tar
  type: s3
  source:
    bucket: bosh-windows-dependencies
    regexp: tar-(.*).exe
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))

# Semver

- name: image-version-2019
  type: semver
  source:
    access_key_id: ((BOSH_WINDOWS_S3_ADMIN_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_S3_ADMIN_SECRET_ACCESS_KEY))
    bucket: windows2019fs
    initial_version: 2019.0.1
    key: image-version
    region_name: us-east-1

- name: windowsfs-online-release-version
  type: semver
  source:
    access_key_id: ((BOSH_WINDOWS_S3_ADMIN_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_S3_ADMIN_SECRET_ACCESS_KEY))
    bucket: windowsfs
    initial_version: 2019.0.1
    key: windowsfs-online-release-version
    region_name: us-east-1

# GitHub Release
- name: windowsfs-online-github-release
  type: github-release
  source:
    user: cloudfoundry
    repository: windowsfs-online-release
    drafts: false
    access_token: ((GREENHOUSE_CI_ACCESS_TOKEN))

- name: windowsfs-offline-github-release
  type: github-release
  source:
    user: cloudfoundry
    repository: windows2019fs-release
    drafts: false
    access_token: ((GREENHOUSE_CI_ACCESS_TOKEN))


# Timers
- name: monthly-rollup
  type: cron-resource
  source:
    expression: "59 23 20 * *"
    location: "America/New_York"
    fire_immediately: true

jobs:
- name: build-and-push-2019
  serial: true
  serial_groups: [build-and-push]
  plan:
  - in_parallel:
    - get: ci
    - get: windowsservercore-2019
      trigger: true
      params:
        save: false
        rootfs: false
        skip_download: true
    - get: windowsfs-dockerfile-2019
      trigger: true
    - get: windows2016fs-master
    - get: git-setup
      params:
        globs: [Git-*-64-bit.exe]
    - get: tar
    - get: vcredist-ucrt
      trigger: true
    - get: vcredist-ucrt-x86
      trigger: true
    - get: vcredist-2010
      trigger: true
    - get: vcredist-2010-x86
      trigger: true
    - get: dotnet-48-installer
      trigger: true
    - get: image-version-2019
      params: {bump: patch}
  - task: build-and-push
    tags: ["2019"]
    file: ci/tasks/docker-build-and-push/task.yml
    input_mapping:
      repo: windows2016fs-master
      version: image-version-2019
    params:
      EPHEMERAL_DISK_TEMP_PATH: "C:\\var\\vcap\\data\\tmp"
      DOCKERFILE: repo/2019/Dockerfile
      IMAGE_NAME: cloudfoundry/windows2016fs
      DOCKER_USERNAME: ((DOCKER_USERNAME))
      DOCKER_PASSWORD: ((DOCKER_PASSWORD))
      OS_VERSION: "2019"
      SHARE_IP: ((SHARE_IP))
      SHARE_FQDN: ((SHARE_FQDN))
      SHARE_NAME: ((SHARE_NAME))
      SHARE_USERNAME: ((SHARE_USERNAME))
      SHARE_PASSWORD: ((SHARE_PASSWORD))
  - task: update-image-tag
    file: ci/tasks/update-image-tag/task.yml
    input_mapping:
      windows2016fs: windows2016fs-master
      image-version: image-version-2019
    params:
      OS_VERSION: "2019"
  - task: commit-changes
    file: ci/tasks/commit/task.yml
    input_mapping:
      repo: windows2016fs-updated
    output_mapping:
      repo_with_commit: windowsfs-commit
    params:
      MESSAGE: "Updated 2019 image tag"
  - put: windows2016fs-master
    params:
      repository: windowsfs-commit
  - put: image-version-2019
    params: {file: image-version-2019/version}

- name: update-windowsfs-online-2019
  serial: true
  serial_groups: [bump-online]
  plan:
  - in_parallel:
    - get: ci
    - get: release
      resource: windowsfs-online-release-develop-2019
    - get: image-version
      resource: image-version-2019
      passed: [build-and-push-2019]
      trigger: true
  - task: bump-windowsfs-online-release
    file: ci/tasks/update-windowsfs-online-release/task.yml
  - task: commit-changes
    file: ci/tasks/commit/task.yml
    input_mapping:
      repo: bumped-release
    output_mapping:
      repo_with_commit: windowsfs-commit
    params:
      MESSAGE: "Updated 2019 image tag"
  - put: windowsfs-online-release-develop-2019
    params:
      repository: windowsfs-commit
      rebase: true

- name: update-windowsfs-offline-2019
  serial: true
  serial_groups: [bump-offline]
  plan:
  - in_parallel:
    - get: ci
    - get: windowsfs-offline-release-develop-2019
    - get: image-version-2019
      passed: [build-and-push-2019]
      trigger: true
  - task: update-blob
    file: ci/tasks/update-windows2016fs-blob/task.yml
    params:
      FS_VERSION: windows2019fs
      OS_VERSION: "2019"
    input_mapping:
      windowsfs-release: windowsfs-offline-release-develop-2019
      image-version: image-version-2019
  - task: commit-changes
    file: ci/tasks/commit/task.yml
    input_mapping:
      repo: windowsfs-release-updated-blob
    output_mapping:
      repo_with_commit: windowsfs-release-updated-commit
    params:
      MESSAGE: "Updated image blob"
  - put: windowsfs-offline-release-develop-2019
    params:
      repository: windowsfs-release-updated-commit
      rebase: true

# ------------------ online submodule bump

- name: bump-hydrator-online
  serial: true
  serial_groups: [bump-online]
  plan:
  - in_parallel:
    - get: ci
    - get: windowsfs-online-release-develop-2019
    - get: hydrator
      trigger: true
  - task: bump-windowsfs-online-release
    file: ci/tasks/bump-submodule/task.yml
    params:
      SUBMODULE: "src/code.cloudfoundry.org/hydrator"
    input_mapping:
      source-repo: windowsfs-online-release-develop-2019
      module-repo: hydrator
  - put: windowsfs-online-release-develop-2019
    params:
      repository: bumped-repo
      rebase: true

- name: bump-go-online
  serial: true
  serial_groups: [bump-online]
  plan:
  - in_parallel:
    - get: golang-release
      trigger: true
    - get: windowsfs-online-release-develop-2019
    - get: ci
  - task: bosh-vendor-package
    file: ci/tasks/bosh-vendor-package/task.yml
    params:
      AWS_ACCESS_KEY_ID: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
      AWS_SECRET_ACCESS_KEY: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
      PACKAGE: golang-1-windows
    input_mapping:
      release-repo: windowsfs-online-release-develop-2019
      package-repo: golang-release
  - put: windowsfs-online-release-develop-2019
    params:
      repository: bumped-release-repo
# -----------------------
#
#
#
# ------- bump offline submodules

- name: bump-hydrator-offline
  serial: true
  serial_groups: [bump-offline]
  plan:
  - in_parallel:
    - get: ci
    - get: windowsfs-offline-release-develop-2019
    - get: hydrator
      trigger: true
  - task: bump-windowsfs-release
    file: ci/tasks/bump-submodule/task.yml
    params:
      SUBMODULE: "src/code.cloudfoundry.org/hydrator"
    input_mapping:
      source-repo: windowsfs-offline-release-develop-2019
      module-repo: hydrator
  - put: windowsfs-offline-release-develop-2019
    params:
      repository: bumped-repo
      rebase: false

- name: bump-go-offline
  serial: true
  serial_groups: [bump-offline]
  plan:
  - in_parallel:
    - get: golang-release
      trigger: true
    - get: windowsfs-offline-release-develop-2019
    - get: ci
  - task: bosh-update-blob
    file: ci/tasks/bosh-update-blob/task.yml
    params:
      AWS_ACCESS_KEY_ID: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
      AWS_SECRET_ACCESS_KEY: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
    input_mapping:
      release-repo: windowsfs-offline-release-develop-2019
  - put: windowsfs-offline-release-develop-2019
    params:
      repository: bumped-release-repo

# --------------- Tests
- name: aioli-online-cats
  serial: true
  # The online tests keep failing when run in parallel
  # so running them serially
  serial_groups: [online-tests]
  plan:
  - in_parallel:
    - get: ci
    - get: image-version-2019
      passed: [update-windowsfs-online-2019]
    - get: windowsfs-online-release-develop-2019
      passed: [update-windowsfs-online-2019]
      trigger: true
    - get: cf-acceptance-tests
    - get: cf-deployment-concourse-tasks
    - get: cf-deployment
    - get: gcp-windows-stemcell
    - get: garden-windows-environments
  - in_parallel:
    - task: get-linux-stemcell
      file: ci/tasks/get-gcp-linux-stemcell/task.yml
      output_mapping:
        stemcell: gcp-linux-stemcell
    - task: create-windowsfs-release
      file: ci/tasks/bosh-cr/task.yml
      input_mapping:
        release: windowsfs-online-release-develop-2019
      output_mapping:
        release-tarball: windowsfs-tarball
  - task: create-windowsfs-opsfile
    file: ci/tasks/write-windows2016fs-opsfile/task.yml
    params:
      FS_VERSION: windowsfs
    input_mapping:
      release-tarball: windowsfs-tarball
  - task: delete-deployment
    file: ci/tasks/bosh-deld/task.yml
    params:
      BOSH_CA_CERT: ((AIOLI_BOSH_CA_CERT))
      BOSH_CLIENT: ((AIOLI_BOSH_CLIENT))
      BOSH_CLIENT_SECRET: ((AIOLI_BOSH_CLIENT_SECRET))
      BOSH_DEPLOYMENT: cf
      BOSH_ENVIRONMENT: ((AIOLI_BOSH_ENVIRONMENT))
      JUMPBOX_IP: ((AIOLI_JUMPBOX_IP))
      JUMPBOX_SSH_KEY: ((AIOLI_JUMPBOX_SSH_KEY))
  - put: aioli-cf-deployment
    params:
      manifest: cf-deployment/cf-deployment.yml
      stemcells:
      - gcp-linux-stemcell/*.tgz
      - gcp-windows-stemcell/*.tgz
      releases:
      - windowsfs-tarball/*.tgz
      ops_files:
      - cf-deployment/operations/scale-to-one-az.yml
      # latest bbl only brings up two router backends by default
      - ci/operations/use-2-azs-for-router.yml
      - cf-deployment/operations/windows2019-cell.yml
      - cf-deployment/operations/use-latest-windows2019-stemcell.yml
      - ci/operations/enable-rdp-2019.yml
      - windowsfs-opsfile/specified-windowsfs-version.yml
      - cf-deployment/operations/use-online-windows2019fs.yml
      vars_files:
      - garden-windows-environments/aioli/cf/vars.yml
      cleanup: true
    get_params:
      skip_export: true
  - task: generate-integration-config
    file: ci/tasks/generate-integration-config/task.yml
    params:
      ADMIN_PASSWORD: ((AIOLI_ADMIN_PASSWORD))
      ADMIN_USER: admin
      API: api.aioli.cf-app.com
      APPS_DOMAIN: aioli.cf-app.com
      UNALLOCATED_IP: 10.0.0.5
      WINDOWS_STACK: windows
  - task: cats
    file: cf-deployment-concourse-tasks/run-cats/task.yml
    params:
      NODES: 4
    on_success:
      task: delete-deployment
      file: ci/tasks/bosh-deld/task.yml
      params:
        BOSH_CA_CERT: ((AIOLI_BOSH_CA_CERT))
        BOSH_CLIENT: ((AIOLI_BOSH_CLIENT))
        BOSH_CLIENT_SECRET: ((AIOLI_BOSH_CLIENT_SECRET))
        BOSH_DEPLOYMENT: cf
        BOSH_ENVIRONMENT: ((AIOLI_BOSH_ENVIRONMENT))
        JUMPBOX_IP: ((AIOLI_JUMPBOX_IP))
        JUMPBOX_SSH_KEY: ((AIOLI_JUMPBOX_SSH_KEY))

- name: aioli-online-smoke-test
  serial: true
  # The online tests keep failing when run in parallel
  # so running them serially
  serial_groups: [online-tests]
  plan:
  - in_parallel:
    - get: ci
    - get: image-version-2019
      passed: [update-windowsfs-online-2019]
    - get: windowsfs-online-release-develop-2019
      passed: [update-windowsfs-online-2019]
      trigger: true
    - get: winc-release-master
      trigger: true
    - get: gcp-windows-stemcell
  - in_parallel:
    - task: create-windowsfs-release
      file: ci/tasks/bosh-cr/task.yml
      input_mapping:
        release: windowsfs-online-release-develop-2019
      output_mapping:
        release-tarball: windowsfs-tarball
    - task: create-winc-release
      file: ci/tasks/bosh-cr/task.yml
      input_mapping:
        release: winc-release-master
      output_mapping:
        release-tarball: winc-tarball
  - task: delete-deployment
    file: ci/tasks/bosh-deld/task.yml
    params:
      BOSH_CA_CERT: ((AIOLI_BOSH_CA_CERT))
      BOSH_CLIENT: ((AIOLI_BOSH_CLIENT))
      BOSH_CLIENT_SECRET: ((AIOLI_BOSH_CLIENT_SECRET))
      BOSH_DEPLOYMENT: windows2019fs
      BOSH_ENVIRONMENT: ((AIOLI_BOSH_ENVIRONMENT))
      JUMPBOX_IP: ((AIOLI_JUMPBOX_IP))
      JUMPBOX_SSH_KEY: ((AIOLI_JUMPBOX_SSH_KEY))
  - put: aioli-smoke-test-deployment
    params:
      manifest: windowsfs-online-release-develop-2019/manifests/smoke-test-2019.yml
      stemcells:
      - gcp-windows-stemcell/*.tgz
      releases:
      - windowsfs-tarball/*.tgz
      - winc-tarball/*.tgz
      cleanup: true
    get_params:
      skip_export: true
  - task: smoke-test
    file: ci/tasks/fs-smoke-test/task.yml
    params:
      FS_VERSION: windows2019fs
      BOSH_CA_CERT: ((AIOLI_BOSH_CA_CERT))
      BOSH_CLIENT: ((AIOLI_BOSH_CLIENT))
      BOSH_CLIENT_SECRET: ((AIOLI_BOSH_CLIENT_SECRET))
      BOSH_ENVIRONMENT: ((AIOLI_BOSH_ENVIRONMENT))
      JUMPBOX_IP: ((AIOLI_JUMPBOX_IP))
      JUMPBOX_SSH_KEY: ((AIOLI_JUMPBOX_SSH_KEY))
    on_success:
      task: delete-deployment
      file: ci/tasks/bosh-deld/task.yml
      params:
        BOSH_CA_CERT: ((AIOLI_BOSH_CA_CERT))
        BOSH_CLIENT: ((AIOLI_BOSH_CLIENT))
        BOSH_CLIENT_SECRET: ((AIOLI_BOSH_CLIENT_SECRET))
        BOSH_DEPLOYMENT: windows2019fs
        BOSH_ENVIRONMENT: ((AIOLI_BOSH_ENVIRONMENT))
        JUMPBOX_IP: ((AIOLI_JUMPBOX_IP))
        JUMPBOX_SSH_KEY: ((AIOLI_JUMPBOX_SSH_KEY))

- name: sriracha-offline-cats
  serial: true
  # The offline tests keep failing when run in parallel
  # so running them serially
  serial_groups: [offline-tests]
  plan:
  - in_parallel:
    - get: ci
    - get: image-version-2019
      passed: [update-windowsfs-offline-2019]
    - get: windowsfs-offline-release-develop-2019
      passed: [update-windowsfs-offline-2019]
      trigger: true
    - get: cf-acceptance-tests
    - get: cf-deployment-concourse-tasks
    - get: cf-deployment
    - get: gcp-windows-stemcell
    - get: garden-windows-environments
  - in_parallel:
    - task: get-linux-stemcell
      file: ci/tasks/get-gcp-linux-stemcell/task.yml
      output_mapping: { stemcell: gcp-linux-stemcell }
    - task: create-windowsfs-release
      file: ci/tasks/create-fs-release-linux/task.yml
      input_mapping:
        windowsfs-release: windowsfs-offline-release-develop-2019
      output_mapping:
        release-tarball: windowsfs-tarball
  - task: create-windowsfs-opsfile
    file: ci/tasks/write-windows2016fs-opsfile/task.yml
    params:
      FS_VERSION: windows2019fs
    input_mapping: { release-tarball: windowsfs-tarball }
  - task: delete-deployment
    file: ci/tasks/bosh-deld/task.yml
    params:
      BOSH_CA_CERT: ((SRIRACHA_BOSH_CA_CERT))
      BOSH_CLIENT: ((SRIRACHA_BOSH_CLIENT))
      BOSH_CLIENT_SECRET: ((SRIRACHA_BOSH_CLIENT_SECRET))
      BOSH_DEPLOYMENT: cf
      BOSH_ENVIRONMENT: ((SRIRACHA_BOSH_ENVIRONMENT))
      JUMPBOX_IP: ((SRIRACHA_JUMPBOX_IP))
      JUMPBOX_SSH_KEY: ((SRIRACHA_JUMPBOX_SSH_KEY))
  - put: sriracha-cf-deployment
    params:
      manifest: cf-deployment/cf-deployment.yml
      stemcells:
      - gcp-linux-stemcell/*.tgz
      - gcp-windows-stemcell/*.tgz
      releases:
      - windowsfs-tarball/*.tgz
      ops_files:
      - cf-deployment/operations/scale-to-one-az.yml
      - ci/operations/use-2-azs-for-router.yml
      - cf-deployment/operations/windows2019-cell.yml
      - cf-deployment/operations/use-latest-windows2019-stemcell.yml
      - ci/operations/scale-down-windows2019.yml
      - ci/operations/enable-rdp-2019.yml
      - windowsfs-opsfile/specified-windowsfs-version.yml
      - ci/operations/use-offline-windows2019fs.yml
      vars_files:
      - garden-windows-environments/sriracha/cf/vars.yml
      cleanup: true
    get_params:
      skip_export: true
  - task: generate-integration-config
    file: ci/tasks/generate-integration-config/task.yml
    params:
      ADMIN_PASSWORD: ((SRIRACHA_ADMIN_PASSWORD))
      ADMIN_USER: admin
      API: api.sriracha.cf-app.com
      APPS_DOMAIN: sriracha.cf-app.com
      UNALLOCATED_IP: 10.0.0.5
      WINDOWS_STACK: windows
  - task: cats
    file: cf-deployment-concourse-tasks/run-cats/task.yml
    params:
      NODES: 4
    on_success:
      task: delete-deployment
      file: ci/tasks/bosh-deld/task.yml
      params:
        BOSH_CA_CERT: ((SRIRACHA_BOSH_CA_CERT))
        BOSH_CLIENT: ((SRIRACHA_BOSH_CLIENT))
        BOSH_CLIENT_SECRET: ((SRIRACHA_BOSH_CLIENT_SECRET))
        BOSH_DEPLOYMENT: cf
        BOSH_ENVIRONMENT: ((SRIRACHA_BOSH_ENVIRONMENT))
        JUMPBOX_IP: ((SRIRACHA_JUMPBOX_IP))
        JUMPBOX_SSH_KEY: ((SRIRACHA_JUMPBOX_SSH_KEY))

- name: sriracha-offline-smoke-test
  serial: true
  # The offline tests keep failing when run in parallel
  # so running them serially
  serial_groups: [offline-tests]
  plan:
  - in_parallel:
    - get: ci
    - get: image-version-2019
      passed: [update-windowsfs-offline-2019]
    - get: windowsfs-offline-release-develop-2019
      passed: [update-windowsfs-offline-2019]
      trigger: true
    - get: winc-release-master
      trigger: true
    - get: gcp-windows-stemcell
  - in_parallel:
    - task: create-windowsfs-release
      file: ci/tasks/create-fs-release-linux/task.yml
      input_mapping:
        windowsfs-release: windowsfs-offline-release-develop-2019
      output_mapping:
        release-tarball: windowsfs-tarball
    - task: create-winc-release
      file: ci/tasks/bosh-cr/task.yml
      input_mapping:
        release: winc-release-master
      output_mapping:
        release-tarball: winc-tarball
  - task: create-windowsfs-opsfile
    file: ci/tasks/write-windows2016fs-opsfile/task.yml
    params:
      FS_VERSION: windows2019fs
    input_mapping: { release-tarball: windowsfs-tarball }
  - task: delete-deployment
    file: ci/tasks/bosh-deld/task.yml
    params:
      BOSH_CA_CERT: ((SRIRACHA_BOSH_CA_CERT))
      BOSH_CLIENT: ((SRIRACHA_BOSH_CLIENT))
      BOSH_CLIENT_SECRET: ((SRIRACHA_BOSH_CLIENT_SECRET))
      BOSH_DEPLOYMENT: windows2019fs
      BOSH_ENVIRONMENT: ((SRIRACHA_BOSH_ENVIRONMENT))
      JUMPBOX_IP: ((SRIRACHA_JUMPBOX_IP))
      JUMPBOX_SSH_KEY: ((SRIRACHA_JUMPBOX_SSH_KEY))
  - put: sriracha-smoke-test-deployment
    params:
      manifest: windowsfs-offline-release-develop-2019/manifests/smoke-test.yml
      stemcells:
      - gcp-windows-stemcell/*.tgz
      releases:
      - windowsfs-tarball/*.tgz
      - winc-tarball/*.tgz
      ops_files:
      - windowsfs-opsfile/specified-windowsfs-version.yml
      cleanup: true
    get_params:
      skip_export: true
  - task: smoke-test
    file: ci/tasks/fs-smoke-test/task.yml
    params:
      FS_VERSION: windows2019fs
      BOSH_CA_CERT: ((SRIRACHA_BOSH_CA_CERT))
      BOSH_CLIENT: ((SRIRACHA_BOSH_CLIENT))
      BOSH_CLIENT_SECRET: ((SRIRACHA_BOSH_CLIENT_SECRET))
      BOSH_ENVIRONMENT: ((SRIRACHA_BOSH_ENVIRONMENT))
      JUMPBOX_IP: ((SRIRACHA_JUMPBOX_IP))
      JUMPBOX_SSH_KEY: ((SRIRACHA_JUMPBOX_SSH_KEY))
    on_success:
      task: delete-deployment
      file: ci/tasks/bosh-deld/task.yml
      params:
        BOSH_CA_CERT: ((SRIRACHA_BOSH_CA_CERT))
        BOSH_CLIENT: ((SRIRACHA_BOSH_CLIENT))
        BOSH_CLIENT_SECRET: ((SRIRACHA_BOSH_CLIENT_SECRET))
        BOSH_DEPLOYMENT: windows2019fs
        BOSH_ENVIRONMENT: ((SRIRACHA_BOSH_ENVIRONMENT))
        JUMPBOX_IP: ((SRIRACHA_JUMPBOX_IP))
        JUMPBOX_SSH_KEY: ((SRIRACHA_JUMPBOX_SSH_KEY))

# ----- generate release notes


- name: generate-rootfs-metadata
  serial: true
  plan:
  - in_parallel:
    - get: ci
    - get: image-version-2019
      passed: [aioli-online-cats, aioli-online-smoke-test, sriracha-offline-cats, sriracha-offline-smoke-test]
      trigger: true
    - get: windowsfs-online-release-develop-2019
      passed: [aioli-online-cats, aioli-online-smoke-test]
    - get: windowsfs-offline-release-develop-2019
      passed: [sriracha-offline-cats, sriracha-offline-smoke-test]
  - task: generate
    tags: [2019]
    file: ci/tasks/generate-rootfs-metadata/task.yml
    input_mapping:
      image-version: image-version-2019
  - put: kb-metadata
    params: {file: artifacts/kb-metadata}

## ship

- name: shipit-major
  serial: true
  plan:
    - in_parallel:
        - get: ci
        - get: kb-metadata
          passed: [generate-rootfs-metadata]
        - get: windowsfs-online-release-master-2019
        - get: windowsfs-online-release-develop-2019
          passed: [generate-rootfs-metadata]
        - get: windowsfs-offline-release-master-2019
        - get: windowsfs-offline-release-develop-2019
          passed: [generate-rootfs-metadata]
        - get: windowsfs-online-release-version
          params: {bump: major}
    - task: generate-release-notes
      file: ci/tasks/generate-release-notes/task.yml
      input_mapping:
        windowsfs-release: windowsfs-offline-release-develop-2019
      params:
        FS_VERSION: windows2019fs
    - in_parallel:
        - do:
          - task: finalize-release
            file: ci/tasks/finalize-release/task.yml
            input_mapping:
              release: windowsfs-online-release-develop-2019
              version: windowsfs-online-release-version
            params:
              RELEASE_NAME: windowsfs
              AWS_ACCESS_KEY_ID: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
              AWS_SECRET_ACCESS_KEY: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
              CI_SKIP: true
          - put: windowsfs-online-release-master-2019
            params:
              repository: finalized-release/release
              tag: windowsfs-online-release-version/number
              tag_prefix: v
          - put: windowsfs-online-release-develop-2019
            params:
              repository: finalized-release/release
              merge: true
          - task: generate-github-release
            file: ci/tasks/generate-github-release/task.yml
            input_mapping:
              release: finalized-repo
              version: windowsfs-online-release-version
            output_mapping:
              generated-release: generated-online-release
          - put: windowsfs-online-github-release
            params:
              commitish: generated-online-release/commitish
              name: generated-online-release/name
              tag: generated-online-release/version
              body: generated-notes/release-notes
              globs:
                - finalized-release/windowsfs-*.tgz
        - do:
          - task: update-version-and-shas
            file: ci/tasks/update-fs-release-version/task.yml
            params:
              FS_VERSION: windows2019fs
            input_mapping:
              windowsfs-release: windowsfs-offline-release-develop-2019
              version: windowsfs-online-release-version
          - put: windowsfs-offline-release-master-2019
            params:
              repository: windowsfs-release-updated-version
              tag: windowsfs-online-release-version/version
              tag_prefix: v
          - put: windowsfs-offline-release-develop-2019
            params:
              repository: windowsfs-release-updated-version
              merge: true
          - task: generate-github-release
            file: ci/tasks/generate-github-release/task.yml
            input_mapping:
              release: windowsfs-release-updated-version
              version: windowsfs-online-release-version
            output_mapping:
              generated-release: generated-offline-release
          - put: windowsfs-offline-github-release
            params:
              commitish: generated-offline-release/commitish
              name: generated-offline-release/name
              tag: generated-offline-release/version
              body: generated-notes/release-notes
    - put: windowsfs-online-release-version
      params: {file: windowsfs-online-release-version/number}
    - try:
        task: send-release-slack-alert
        file: ci/tasks/send-release-slack-alert/task.yml
        params:
          CHANNEL: tas-windows
          SLACK_URL: ((release-slack-url))
          USERS: "<@U055J9EJW> <@UC53SHZ32>"

- name: shipit-minor
  serial: true
  plan:
  - in_parallel:
    - get: ci
    - get: kb-metadata
      passed: [generate-rootfs-metadata]
    - get: windowsfs-online-release-master-2019
    - get: windowsfs-online-release-develop-2019
      passed: [generate-rootfs-metadata]
    - get: windowsfs-offline-release-master-2019
    - get: windowsfs-offline-release-develop-2019
      passed: [generate-rootfs-metadata]
    - get: windowsfs-online-release-version
      params: {bump: minor}
    - get: monthly-rollup
      trigger: true
  - task: generate-release-notes
    file: ci/tasks/generate-release-notes/task.yml
    input_mapping:
      windowsfs-release: windowsfs-offline-release-develop-2019
    params:
      FS_VERSION: windows2019fs
  - in_parallel:
      - do:
        - task: finalize-release
          file: ci/tasks/finalize-release/task.yml
          input_mapping:
            release: windowsfs-online-release-develop-2019
            version: windowsfs-online-release-version
          params:
            RELEASE_NAME: windowsfs
            AWS_ACCESS_KEY_ID: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
            AWS_SECRET_ACCESS_KEY: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
            CI_SKIP: true
        - put: windowsfs-online-release-master-2019
          params:
            repository: finalized-release/release
            tag: windowsfs-online-release-version/number
            tag_prefix: v
        - put: windowsfs-online-release-develop-2019
          params:
            repository: finalized-release/release
            merge: true
        - task: generate-github-release
          file: ci/tasks/generate-github-release/task.yml
          input_mapping:
            release: finalized-repo
            version: windowsfs-online-release-version
          output_mapping:
            generated-release: generated-online-release
        - put: windowsfs-online-github-release
          params:
            commitish: generated-online-release/commitish
            name: generated-online-release/name
            tag: generated-online-release/version
            body: generated-notes/release-notes
            globs:
            - finalized-release/windowsfs-*.tgz
      - do:
        - task: update-version-and-shas
          file: ci/tasks/update-fs-release-version/task.yml
          input_mapping:
            windowsfs-release: windowsfs-offline-release-develop-2019
            version: windowsfs-online-release-version
        - put: windowsfs-offline-release-master-2019
          params:
            repository: windowsfs-release-updated-version
            tag: windowsfs-online-release-version/version
            tag_prefix: v
        - put: windowsfs-offline-release-develop-2019
          params:
            repository: windowsfs-release-updated-version
            merge: true
        - task: generate-github-release
          file: ci/tasks/generate-github-release/task.yml
          input_mapping:
            release: windowsfs-release-updated-version
            version: windowsfs-online-release-version
          output_mapping:
            generated-release: generated-offline-release
        - put: windowsfs-offline-github-release
          params:
            commitish: generated-offline-release/commitish
            name: generated-offline-release/name
            tag: generated-offline-release/version
            body: generated-notes/release-notes
  - put: windowsfs-online-release-version
    params: {file: windowsfs-online-release-version/number}
  - try:
      task: send-release-slack-alert
      file: ci/tasks/send-release-slack-alert/task.yml
      params:
        CHANNEL: tas-windows
        SLACK_URL: ((release-slack-url))
        USERS: "<@U055J9EJW> <@UC53SHZ32>"

- name: shipit-patch
  serial: true
  plan:
  - in_parallel:
    - get: ci
    - get: kb-metadata
      passed: [generate-rootfs-metadata]
    - get: windowsfs-online-release-master-2019
    - get: windowsfs-online-release-develop-2019
      passed: [generate-rootfs-metadata]
    - get: windowsfs-offline-release-master-2019
    - get: windowsfs-offline-release-develop-2019
      passed: [generate-rootfs-metadata]
    - get: windowsfs-online-release-version
      params: {bump: patch}
  - task: generate-release-notes
    file: ci/tasks/generate-release-notes/task.yml
    input_mapping:
      windowsfs-release: windowsfs-offline-release-develop-2019
    params:
      FS_VERSION: windows2019fs
  - in_parallel:
      - do:
        - task: finalize-release
          file: ci/tasks/finalize-release/task.yml
          input_mapping:
            release: windowsfs-online-release-develop-2019
            version: windowsfs-online-release-version
          params:
            RELEASE_NAME: windowsfs
            AWS_ACCESS_KEY_ID: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
            AWS_SECRET_ACCESS_KEY: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
            CI_SKIP: true
        - put: windowsfs-online-release-master-2019
          params:
            repository: finalized-release/release
            tag: windowsfs-online-release-version/number
            tag_prefix: v
        - put: windowsfs-online-release-develop-2019
          params:
            repository: finalized-release/release
            merge: true
        - task: generate-github-release
          file: ci/tasks/generate-github-release/task.yml
          input_mapping:
            release: finalized-repo
            version: windowsfs-online-release-version
          output_mapping:
            generated-release: generated-online-release
        - put: windowsfs-online-github-release
          params:
            commitish: generated-online-release/commitish
            name: generated-online-release/name
            tag: generated-online-release/version
            body: generated-notes/release-notes
            globs:
            - finalized-release/windowsfs-*.tgz
      - do:
        - task: update-version-and-shas
          file: ci/tasks/update-fs-release-version/task.yml
          input_mapping:
            windowsfs-release: windowsfs-offline-release-develop-2019
            version: windowsfs-online-release-version
        - put: windowsfs-offline-release-master-2019
          params:
            repository: windowsfs-release-updated-version
            tag: windowsfs-online-release-version/version
            tag_prefix: v
        - put: windowsfs-offline-release-develop-2019
          params:
            repository: windowsfs-release-updated-version
            merge: true
        - task: generate-github-release
          file: ci/tasks/generate-github-release/task.yml
          input_mapping:
            release: windowsfs-release-updated-version
            version: windowsfs-online-release-version
          output_mapping:
            generated-release: generated-offline-release
        - put: windowsfs-offline-github-release
          params:
            commitish: generated-offline-release/commitish
            name: generated-offline-release/name
            tag: generated-offline-release/version
            body: generated-notes/release-notes
  - put: windowsfs-online-release-version
    params: {file: windowsfs-online-release-version/number}
  - try:
      task: send-release-slack-alert
      file: ci/tasks/send-release-slack-alert/task.yml
      params:
        CHANNEL: tas-windows
        SLACK_URL: ((release-slack-url))
        USERS: "<@U055J9EJW> <@UC53SHZ32>"
