resources:

# Git Repos

- name: ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/garden-windows-ci.git

- name: envoy
  type: git
  source:
    branch: pivotal-windows-dev
    uri: https://github.com/greenhouse-org/envoy.git

- name: envoy-release-develop
  type: git
  source:
    branch: develop
    uri: git@github.com:cloudfoundry/envoy-release
    private_key: {{CLOUDFOUNDRY_ENVOY_RELEASE_DEPLOY_KEY}}

- name: envoy-release-master
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/envoy-release
    private_key: {{CLOUDFOUNDRY_ENVOY_RELEASE_DEPLOY_KEY}}

# S3 Buckets

- name: envoy-windows-bucket
  type: s3
  source:
    bucket: garden-windows-envoy
    regexp: envoy-(.*)-.*.exe
    access_key_id: ((BOSH_WINDOWS_S3_ADMIN_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_S3_ADMIN_SECRET_ACCESS_KEY))

# Semver

- name: version
  type: semver
  source:
    access_key_id: ((BOSH_WINDOWS_S3_ADMIN_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_S3_ADMIN_SECRET_ACCESS_KEY))
    bucket: envoy-release
    initial_version: 0.1.0
    key: version
    region_name: us-east-1

# Github Releases

- name: envoy-release-github-release
  type: github-release
  source:
    user: cloudfoundry
    repository: envoy-release
    drafts: true
    access_token: ((GREENHOUSE_CI_ACCESS_TOKEN))

jobs:
- name: envoy-windows-debug
  serial: true
  serial_groups: [envoy]
  public: true
  plan:
  - get: ci
  - get: envoy
    trigger: true
  - task: envoy-ci-windows
    tags: [envoy]
    file: ci/tasks/envoy-ci-windows/task.yml
    params:
      BUILD_TYPE: debug

- name: envoy-windows-release
  serial: true
  serial_groups: [envoy]
  public: true
  plan:
  - get: ci
  - get: envoy
    trigger: true
  - task: envoy-ci-windows
    tags: [envoy]
    file: ci/tasks/envoy-ci-windows/task.yml
    params:
      BUILD_TYPE: release
  - put: envoy-windows-bucket
    params:
      file: envoy-exe/envoy-*-*.exe

- name: bump-envoy-blob
  plan:
  - in_parallel:
    - get: ci
    - get: envoy-release-develop
    - get: envoy-windows-bucket
      trigger: true
      passed: [envoy-windows-release]
  - task: bump-blob-in-envoy-release
    file: ci/tasks/bump-envoy-in-envoy-release/task.yml
    params:
      AWS_ACCESS_KEY_ID: ((BOSH_WINDOWS_S3_ADMIN_ACCESS_KEY_ID))
      AWS_SECRET_ACCESS_KEY: ((BOSH_WINDOWS_S3_ADMIN_SECRET_ACCESS_KEY))
  - put: envoy-release-develop
    params:
      repository: envoy-release-develop-updated
      rebase: true

- name: shipit-major
  serial: true
  plan:
  - in_parallel:
    - get: ci
    - get: envoy-release-develop
    - get: version
      params: {bump: major}
  - task: finalize-release
    file: ci/tasks/finalize-release/task.yml
    input_mapping: { release: envoy-release-develop }
    params:
      RELEASE_NAME: envoy
      AWS_ACCESS_KEY_ID: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
      AWS_SECRET_ACCESS_KEY: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
  - put: envoy-release-develop
    params:
      repository: finalized-release/release
      tag: version/number
      tag_prefix: v
  - put: envoy-release-master
    params:
      repository: finalized-release/release
  - put: version
    params: {file: version/number}
  - task: generate-github-release
    input_mapping: { release: finalized-repo }
    file: ci/tasks/generate-github-release/task.yml
  - put: envoy-release-github-release
    params:
      commitish: generated-release/commitish
      name: generated-release/name
      tag: generated-release/version
      globs:
      - finalized-release/envoy-*.tgz

- name: shipit-minor
  serial: true
  plan:
  - in_parallel:
    - get: ci
    - get: envoy-release-develop
    - get: version
      params: {bump: minor}
  - task: finalize-release
    file: ci/tasks/finalize-release/task.yml
    input_mapping: { release: envoy-release-develop }
    params:
      RELEASE_NAME: envoy
      AWS_ACCESS_KEY_ID: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
      AWS_SECRET_ACCESS_KEY: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
  - put: envoy-release-develop
    params:
      repository: finalized-release/release
      tag: version/number
      tag_prefix: v
  - put: envoy-release-master
    params:
      repository: finalized-release/release
  - put: version
    params: {file: version/number}
  - task: generate-github-release
    input_mapping: { release: finalized-repo }
    file: ci/tasks/generate-github-release/task.yml
  - put: envoy-release-github-release
    params:
      commitish: generated-release/commitish
      name: generated-release/name
      tag: generated-release/version
      globs:
      - finalized-release/envoy-*.tgz

- name: shipit-patch
  serial: true
  plan:
  - in_parallel:
    - get: ci
    - get: envoy-release-develop
    - get: version
      params: {bump: patch}
  - task: finalize-release
    file: ci/tasks/finalize-release/task.yml
    input_mapping: { release: envoy-release-develop }
    params:
      RELEASE_NAME: envoy
      AWS_ACCESS_KEY_ID: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
      AWS_SECRET_ACCESS_KEY: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
  - put: envoy-release-develop
    params:
      repository: finalized-release/release
      tag: version/number
      tag_prefix: v
  - put: envoy-release-master
    params:
      repository: finalized-release/release
  - put: version
    params: {file: version/number}
  - task: generate-github-release
    input_mapping: { release: finalized-repo }
    file: ci/tasks/generate-github-release/task.yml
  - put: envoy-release-github-release
    params:
      commitish: generated-release/commitish
      name: generated-release/name
      tag: generated-release/version
      globs:
      - finalized-release/envoy-*.tgz
