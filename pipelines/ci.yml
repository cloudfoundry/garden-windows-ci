resource_types:
- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

- name: metalink-repository
  type: docker-image
  source:
    repository: dpb587/metalink-repository-resource

resources:
- name: ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/garden-windows-ci.git

- name: docker-ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/garden-windows-ci.git
    paths: [ docker/Dockerfile.ci ]

- name: ci-image
  type: docker-image
  source:
    repository: cloudfoundry/garden-windows-ci
    username: {{DOCKER_USERNAME}}
    password: {{DOCKER_PASSWORD}}

- name: windows-2019-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-windows2019-go_agent

- name: xenial-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-vsphere-esxi-ubuntu-xenial-go_agent

- name: windows-tools-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/windows-tools-release

- name: windows-utilities-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/windows-utilities-release

- name: concourse-release
  type: bosh-io-release
  source:
    repository: concourse/concourse-bosh-release

- name: worker-deployment
  type: bosh-deployment
  source:
    skip_check: true

- name: longrunning-worker-deployment
  type: bosh-deployment
  source:
    skip_check: true

- name: garden-windows-environments
  type: git
  source:
    uri: git@github.com:pivotal/garden-windows-environments
    branch: master
    private_key: ((GREENHOUSE-CI_SSH_KEY))

- name: cf
  type: cf
  source:
    api: https://api.run.pivotal.io
    organization: garden-windows
    space: topic-bots
    username: ((cf-username))
    password: ((cf-password))

- name: config
  type: git
  source:
    uri: https://github.com/greenhouse-org/delegate-bot-config.git
    branch: garden-windows

- name: slack-delegate-bot
  type: metalink-repository
  source:
    include_files:
      - delegatebot-*-linux-amd64
    uri: git+https://github.com/dpb587/slack-delegate-bot.git//published#artifacts

jobs:
- name: build-and-push
  serial: true
  plan:
  - get: ci
    resource: docker-ci
    trigger: true
  - put: ci-image
    params:
      build: ci/docker
      dockerfile: ci/docker/Dockerfile.ci
      tag_as_latest: true

- name: update-windows-2019-deployment
  serial: true
  serial_groups: [ deploy ]
  plan:
  - in_parallel:
    - get: ci
    - get: garden-windows-environments
    - get: windows-2019-stemcell
      trigger: true
    - get: concourse-release
      params: {tarball: false}
      trigger: true
    - get: windows-tools-release
      params: {tarball: false}
      trigger: true
    - get: windows-utilities-release
      params: {tarball: false}
      trigger: true
  - task: update-windows2019
    file: ci/tasks/update-windows-worker-manifest/task.yml
    input_mapping:
      windows-stemcell: windows-2019-stemcell
    params:
      BOSH_DEPLOYMENT: concourse
      BOSH_CREDENTIALS: ((spitfire-bosh-credentials))
  - try:
      put: worker-deployment
      inputs:
      - windows-2019-stemcell
      - artifacts
      params:
        source_file: artifacts/source-file.yml
        manifest: artifacts/manifest.yml
        stemcells:
          - windows-2019-stemcell/stemcell.tgz

- name: update-longrunning-worker-deployment
  serial: true
  serial_groups: [ deploy ]
  plan:
  - in_parallel:
    - get: ci
    - get: garden-windows-environments
    - get: stemcell
      resource: xenial-stemcell
    - get: concourse-release
      passed: [update-windows-2019-deployment]
      params: {tarball: false}
      trigger: true
  - task: update-longrunning-worker
    tags: [longrunning]
    file: ci/tasks/update-longrunning-worker-manifest/task.yml
    params:
      BOSH_DEPLOYMENT: concourse-workers
      BOSH_CREDENTIALS: ((mulgore-bosh-credentials))
  - try:
      put: longrunning-worker-deployment
      tags: [longrunning]
      inputs:
        - stemcell
        - artifacts
      params:
        source_file: artifacts/source-file.yml
        manifest: artifacts/manifest.yml
        stemcells:
          - stemcell/stemcell.tgz

- name: deploy-slack-delegate-bot
  serial: true
  plan:
    - in_parallel:
        - get: ci
        - get: slack-delegate-bot
          trigger: true
        - get: config
          trigger: true
    - task: build
      file: ci/tasks/deploy-delegate-bot/task.yml
      params:
        SLACK_TOKEN: ((slack-token))
    - put: cf
      params:
        manifest: app/cf.yml
        path: app
