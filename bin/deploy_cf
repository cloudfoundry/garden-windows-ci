#!/bin/bash

set -e

if [ "$BOSH_TARGET_NAME" != "$1" ]; then
  echo "Current bosh target is \"$BOSH_TARGET_NAME\". Please 'bt $1' and run the script again"
  exit 1
fi
if [[ -z "$(gcloud config list --format='value(core.account)')" ]]; then
  echo 'Must log in using `gcloud auth login`'
  exit 1
fi

environment=$1
case "$1" in
  pesto)
    project_name=cff-greenhouse-$1
    ;;
  tartar  | guac)
    project_name=cf-greenhouse-$1
    ;;
  mulgore)
    project_name=$1
    ;;
  hummus | tzatziki | alfredo | aioli)
    project_name="cf-garden-windows-dev/$1"
    ;;
  *)
    echo "Cannot deploy environment: $1"
    exit 1
esac

echo "deploying $environment..."
CF_DEPLOYMENT=${CF_DEPLOYMENT:-$HOME/workspace/cf-deployment}
GARDEN_WINDOWS_CI=${GARDEN_WINDOWS_CI:-$HOME/workspace/garden-windows-ci}
BOSH_DEPLOYMENT=${BOSH_DEPLOYMENT:-$HOME/workspace/bosh-deployment}
if [[ ! -d "${CF_DEPLOYMENT}" ]]; then
  git clone https://github.com/cloudfoundry/cf-deployment ${CF_DEPLOYMENT}
else
  pushd ${CF_DEPLOYMENT} > /dev/null
    git pull
  popd > /dev/null
fi

if [[ ! -d "${BOSH_DEPLOYMENT}" ]]; then
  git clone https://github.com/cloudfoundry/bosh-deployment ${BOSH_DEPLOYMENT}
else
  pushd ${BOSH_DEPLOYMENT} > /dev/null
    git pull
  popd > /dev/null
fi

bosh -d cf update-runtime-config ${BOSH_DEPLOYMENT}/runtime-configs/dns.yml --name dns

command="bosh -d cf deploy ${CF_DEPLOYMENT}/cf-deployment.yml \
    -o ${CF_DEPLOYMENT}/operations/use-latest-stemcell.yml \
    -o ${CF_DEPLOYMENT}/operations/windows2012R2-cell.yml \
    -o ${CF_DEPLOYMENT}/operations/use-latest-windows2012R2-stemcell.yml \
    -o ${CF_DEPLOYMENT}/operations/scale-to-one-az.yml \
    -o ${CF_DEPLOYMENT}/operations/stop-skipping-tls-validation.yml \
    -o ${GARDEN_WINDOWS_CI}/operations/latest-garden-runc.yml \
    -o ${GARDEN_WINDOWS_CI}/operations/latest-winc.yml \
    -o ${GARDEN_WINDOWS_CI}/operations/enable-rdp-2012R2.yml \
    -v system_domain=$environment.cf-app.com \
    --skip-drain \
  "


if [ "$2" = "1709" ]; then
  command="$command -o ${CF_DEPLOYMENT}/operations/windows2016-cell.yml \
    -o ${GARDEN_WINDOWS_CI}/operations/enable-rdp-2016.yml \
    -o ${GARDEN_WINDOWS_CI}/operations/windows2016-debug.yml \
    -o ${CF_DEPLOYMENT}/operations/use-latest-windows2016-stemcell.yml \
    "
elif [ "$2" = "1803" ]; then
  command="$command -o ${CF_DEPLOYMENT}/operations/windows1803-cell.yml \
    -o ${GARDEN_WINDOWS_CI}/operations/enable-rdp-1803.yml \
    -o ${GARDEN_WINDOWS_CI}/operations/windows1803-debug.yml \
    -o ${CF_DEPLOYMENT}/operations/use-latest-windows1803-stemcell.yml \
    "
elif [ "$2" = "2019" ]; then
  command="$command -o ${CF_DEPLOYMENT}/operations/windows2019-cell.yml \
    -o ${GARDEN_WINDOWS_CI}/operations/enable-rdp-2019.yml \
    -o ${GARDEN_WINDOWS_CI}/operations/windows2019-debug.yml \
    -o ${CF_DEPLOYMENT}/operations/use-latest-windows2019-stemcell.yml \
    "
else
  echo "Invalid version, please select 1709, 1803, or 2019"
  exit 1
fi

echo "Deploying cf on $environment"
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd )"

# When freshly bbl-ed up, create a one-time vars.yml with a randomly generated
# password. To generate a *new* password, delete <bucket>/cf/vars.yml and redeploy
if gsutil -q stat gs://$project_name/cf/vars.yml ; then
  cat <<-EOF> $DIR/vars.yml
	cf_admin_password: `openssl rand -base64 12`
	system_domain: $environment.cf-app.com
	EOF
  gsutil cp $DIR/vars.yml gs://$project_name/cf/vars.yml
fi

if gsutil -q stat gs://$project_name/cf/creds.yml ; then
  gsutil cp gs://$project_name/cf/creds.yml $DIR/creds.yml
  command="$command -l <(cat $DIR/vars.yml || gsutil cat gs://$project_name/cf/vars.yml)"
fi

command="$command \
  --vars-store $DIR/creds.yml \
  -v system_domain=$environment.cf-app.com \
  "

eval $command
gsutil cp $DIR/creds.yml gs://$project_name/cf/creds.yml
rm $DIR/creds.yml
