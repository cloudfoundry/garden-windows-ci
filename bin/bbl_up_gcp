#!/bin/bash -e
# usage: bbl_up_gcp <env> <cf|concourse>

#########################################################################
errMsg=$(cat <<- EOM
!! DO NOT USE THIS SCRIPT !!
THIS SCRIPT IS SUPER OLD. THE ENVIRONMENTS ARE NOT STORED ON A GCS BUCKET.
SEE: https://github.com/pivotal/garden-windows-environments
FOR THE BBL STATES. YOU NEED TO RUN BBL PLAN & BBL UP MANUALLY
EOM
)

echo "${errMsg}"
exit 1
#########################################################################


environment=$1
lb_type=$2

if [[ -z $environment ]]; then
  echo "must provide the environment name"
  exit 1
fi

if ! [[ $lb_type =~ ^(cf|concourse)$ ]]; then
  echo "must provide valid lb_type. (valid values : cf, concourse)"
  exit 1
fi

if [[ -z $BBL_GCP_SERVICE_ACCOUNT_KEY ]]; then
  echo "must provide BBL_GCP_SERVICE_ACCOUNT_KEY"
  exit 1
fi

if [[ -z $BBL_GCP_REGION ]]; then
  echo "must provide BBL_GCP_REGION"
  exit 1
fi

cf_deployment_dir="${HOME}/workspace/cf-deployment"
if [ ! -d "${cf_deployment_dir}" ]; then
  git clone https://github.com/cloudfoundry/cf-deployment "${cf_deployment_dir}"
else
  pushd "${cf_deployment_dir}" > /dev/null
    git pull
  popd > /dev/null
fi


bbl_state_dir="${HOME}/workspace/bbl-state-dir-${environment}"

lb_domain=""
lb_cert=""
lb_key=""
if [ $lb_type = "cf" ]; then
  lb_domain="${environment}.cf-app.com"

  if [ -n "$(dig +short $lb_domain ns)" ]; then
    echo "NS records already exist for $lb_domain. See AWS Route53 DNS service."
    read -p "Press Y to continue bbling up this environment: "
    [[ ! $REPLY =~ ^[Yy]$ ]] && exit 1
  fi

  echo "creating a new cf dev environment called ${environment}"

  mkdir -p ${bbl_state_dir}/certs

  echo "creating load balancer certificates"

  lb_cert="${bbl_state_dir}/certs/cert.pem"
  lb_key="${bbl_state_dir}/certs/key.pem"

  openssl req -x509 \
    -newkey rsa:2048 \
    -keyout "${lb_key}" \
    -out "${lb_cert}" \
    -subj "/C=US/ST=NY/O=pivotal, Inc./CN={$lb_domain}" \
    -nodes -days 365

  echo "created load balancer certificates"
fi

env_bucket="gs://cf-garden-windows-dev/$environment"
if [ $lb_type = concourse ]; then
  env_bucket="gs://cf-greenhouse-${environment}"
fi

echo "writing bbl plan to ${bbl_state_dir}"
bbl \
  --debug \
  --state-dir "${bbl_state_dir}" \
  --iaas "gcp" \
  plan \
  --name "${environment}" \
  --lb-type "${lb_type}" \
  --lb-domain "${lb_domain}" \
  --lb-cert "${lb_cert}" \
  --lb-key "${lb_key}"

echo "bbl'ing up $environment..."
bbl \
  --debug \
  --state-dir "${bbl_state_dir}" \
  up

echo "exporting bosh director env vars"
pushd $bbl_state_dir
  eval "$(bbl print-env)"
popd

bosh env

echo "upload stemcell to bosh director"
stemcell_version=$(bosh interpolate ${cf_deployment_dir}/cf-deployment.yml --path=/stemcells/alias=default/version)
bosh upload-stemcell https://bosh.io/d/stemcells/bosh-google-kvm-ubuntu-xenial-go_agent?v=${stemcell_version}

echo "preparing bbl state directory for upload..."
pushd $bbl_state_dir
  # setup git
  if [ -z "$(gsutil stat $env_bucket/.git/* 2> /dev/null)" ]; then
    git init
  else
    gsutil -m cp -r "$env_bucket/.git" .
  fi
  if [ $lb_type = cf ]; then
    # garden-windows-ci/bin/deploy_cf expects this directory to exist
    mkdir -p cf
    touch cf/creds.yml
  fi
  git add .
  git ci -m "Commit made using bbl_up_gcp script"
popd

echo "uploading bbl state directory to gcloud storage..."
gsutil cp -r $bbl_state_dir/* $env_bucket

if [ $lb_type = concourse ]; then
  echo "Adding vip network to cloud config (required for concourse)"
  bosh update-cloud-config <(bosh interpolate <(bosh cc) -o <(cat << EOF
- type: replace
  path: /networks/name=vip?
  value:
    name: vip
    type: vip
EOF
  )
  )
fi

echo "finished bbl'ing up $environment"
echo "now you can deploy ${lb_type}!"

echo "don't forget to update the shared-dns-account for the cf-app.com record set or add a new record set"

