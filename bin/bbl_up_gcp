#!/bin/bash -e
# usage: bbl_up_gcp <env> <cf|concourse>

environment=$1
lb_type=$2

if [[ -z $environment ]]; then
  echo "must provide the environment name"
  exit 1
fi

if ! [[ $lb_type =~ ^(cf|concourse)$ ]]; then
  echo "must provide valid lb_type. (valid values : cf, concourse)"
  exit 1
fi

if [[ -z $BBL_GCP_SERVICE_ACCOUNT_KEY || -z $BBL_GCP_REGION ]]; then
  echo "must provide BBL_GCP_SERVICE_ACCOUNT_KEY and BBL_GCP_REGION"
  exit 1
fi

cf_deployment_dir="${HOME}/workspace/cf-deployment"
if [ ! -d "${cf_deployment_dir}" ]; then
  git clone https://github.com/cloudfoundry/cf-deployment "${cf_deployment_dir}"
else
  pushd "${cf_deployment_dir}" > /dev/null
    git pull
  popd > /dev/null
fi

# TODO: Check that this environment isn't taken in aws shared-dns

echo "creating a new cf dev environment called ${environment}"

bbl_state_dir="${HOME}/workspace/bbl-state-dir-${environment}"
mkdir -p ${bbl_state_dir}/certs

echo "creating load balancer certificates"

lb_cert="${bbl_state_dir}/certs/cert.pem"
lb_key="${bbl_state_dir}/certs/key.pem"
lb_domain="${environment}.cf-app.com"

openssl req -x509 \
  -newkey rsa:2048 \
  -keyout "${lb_key}" \
  -out "${lb_cert}" \
  -subj "/C=US/ST=NY/O=pivotal, Inc./CN={$lb_domain}" \
  -nodes -days 365

echo "created load balancer certificates"

env_bucket="gs://cf-garden-windows-dev/$environment"
lb_domain_opt="--lb-domain $lb_domain"
if [ $lb_type = concourse ]; then
  unset lb_domain_opt
  env_bucket="gs://cf-greenhouse-${environment}"
fi

echo "writing bbl plan to ${bbl_state_dir}"
bbl \
  --debug \
  --state-dir "${bbl_state_dir}" \
  --iaas "gcp" \
  plan \
  --name "${environment}" \
  --lb-type "${lb_type}" \
  "$lb_domain_opt" \
  --lb-cert "${lb_cert}" \
  --lb-key "${lb_key}"

echo "bbl'ing up $environment..."
bbl \
  --debug \
  --state-dir "${bbl_state_dir}" \
  up

# TODO: Add record set for new environment to shared-dns aws account

echo "exporting bosh director env vars"
pushd $bbl_state_dir
  eval "$(bbl print-env)"
popd

bosh env

echo "upload stemcell to bosh director"
stemcell_version=$(bosh interpolate ${cf_deployment_dir}/cf-deployment.yml --path=/stemcells/alias=default/version)
bosh upload-stemcell https://bosh.io/d/stemcells/bosh-google-kvm-ubuntu-xenial-go_agent?v=${stemcell_version}

echo "preparing bbl state directory for upload..."
pushd $bbl_state_dir
  # TODO: Shouldn't git init be done only if there's no .git already in the bucket?
  # setup git
  git init
  if [ $lb_type = cf ]; then
    # garden-windows-ci/bin/deploy_cf expects this directory to exist
    mkdir cf
    touch cf/creds.yml
  fi
  git add .
  git ci -m "Initial commit"
popd
echo "uploading bbl state directory to gcloud storage..."
gsutil cp -r $bbl_state_dir/* $env_bucket

# TODO: concourse lb-type requires the cloud config be modified by adding a vip network, like this e.g.
# https://github.com/cloudfoundry/bosh-bootloader/blob/523320ac777b9114fc7c7cadc05773f310ac6f06/storage/fixtures/upped/bosh-deployment/gcp/cloud-config.yml#L43-L44

echo "finished bbl'ing up $environment"
echo "now you can deploy ${lb_type}!"

echo "don't forget to update the shared-dns-account for the cf-app.com record set or add a new record set"

# TODO: For cf, create a <project-name>/cf/vars.yml with system_domain and cf_admin_password in GCP storage
