#!/usr/bin/env ruby

require 'tracker_api'

token = ARGV[0]
project_id = ARGV[1].to_i
image_version = ARGV[2]
fs_version = ARGV[3]

# Starting with windows 2019 we started using only one generic online release
if fs_version == "windows2019fs"
  fs_online_version = "windowsfs"
else
  fs_online_version = fs_version
end

client = TrackerApi::Client.new(token: token)
project = client.project(project_id)

name = "New version of cloudfoundry/windows2016fs #{image_version}"
description = "A new version of cloudfoundry/windows2016fs is available. \n
Once all the pipelines are green (and if there are new changes since the previous release),
then release new versions of the BOSH releases that consume it.\n\n
**How to create a new release?**\n
- On the [CI](https://garden-windows.ci.cf-app.com), go to the pipeline corresponding to the release\n
- Make sure the pipeline is green\n
- Trigger a new build on the relevant shipit-* job\n\n
- To get the KBs run `docker run cloudfoundry/windows2016fs:#{image_version} powershell Get-Hotfix` from a Windows VM
**A/C**\n
- Verify there's a release for the github repo cloudfoundry/#{fs_version}-release\n
- Verify there's a release for the github repo cloudfoundry/#{fs_online_version}-online-release\n
- Verify KB numbers in the release notes.\n\n\n"
tasks = [{description: "release cloudfoundry/#{fs_version}-release"},
         {description: "release cloudfoundry/#{fs_online_version}-online-release"},
         {description: 'Link releases in comment'},
         {description: 'Add KB number to release notes'}]
labels = ["#{fs_version}-release", "#{fs_online_version}-online-release"]

project.create_story(
  name: name,
  description: description,
  tasks: tasks,
  estimate: 1,
  labels: labels
)
